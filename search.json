[{"title":"Arthas使用教程第一章","url":"/2022/04/18/Arthas%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E7%AC%AC%E4%B8%80%E7%AB%A0/","content":"<h1 id=\"Arthas-使用教程\"><a href=\"#Arthas-使用教程\" class=\"headerlink\" title=\"Arthas 使用教程\"></a>Arthas 使用教程</h1><h3 id=\"1、dashboard\"><a href=\"#1、dashboard\" class=\"headerlink\" title=\"1、dashboard\"></a>1、dashboard</h3><ol>\n<li>通过命令可以查看当前系统实时数据面板</li>\n<li>通过q或者ctrl + c可以退出dashboard 命令。</li>\n</ol>\n<h3 id=\"2、thead\"><a href=\"#2、thead\" class=\"headerlink\" title=\"2、thead\"></a>2、thead</h3><ol>\n<li>thread 1 命令会打印线程ID1的栈</li>\n<li>Archas 支持管道，可以通过thread 1 | grep ‘main(‘ 查询到main class ，</li>\n</ol>\n<h3 id=\"3、-sc\"><a href=\"#3、-sc\" class=\"headerlink\" title=\"3、 sc\"></a>3、 sc</h3><ol>\n<li>可以通过sc命令查询jvm里加载的类 &#x3D;&#x3D;sc -d *className&#x3D;&#x3D;</li>\n<li>-d : 打印出类加载的具体信息</li>\n<li>可以支持通配符查询</li>\n</ol>\n<h3 id=\"4、jad\"><a href=\"#4、jad\" class=\"headerlink\" title=\"4、jad\"></a>4、jad</h3><ol>\n<li>反编译代码</li>\n<li>–source-only ： 可以只打印在反编译的源代码</li>\n</ol>\n<h3 id=\"5、watch\"><a href=\"#5、watch\" class=\"headerlink\" title=\"5、watch\"></a>5、watch</h3><ol>\n<li>通过watch 命令实时可以查看函数参数&#x2F;返回值&#x2F;异常信息</li>\n<li>&#x3D;&#x3D;watch packageName.className methodName returnObj;&#x3D;&#x3D;</li>\n</ol>\n<h3 id=\"6、vmtool\"><a href=\"#6、vmtool\" class=\"headerlink\" title=\"6、vmtool\"></a>6、vmtool</h3><ol>\n<li>通过vmtool命令可以搜索内存对象</li>\n<li>&#x3D;&#x3D; vmtool –action getInstances –className java.lang.String – limit 10&#x3D;&#x3D;</li>\n</ol>\n<h3 id=\"7、Exit-x2F-stop\"><a href=\"#7、Exit-x2F-stop\" class=\"headerlink\" title=\"7、Exit&#x2F;stop\"></a>7、Exit&#x2F;stop</h3><ol>\n<li>退出Arthas，退出后可以再次使用java -jar archas.jar 连接</li>\n<li>彻底退出arthas exit&#x2F;quit 只是退出当前session，arthas server 还在目标进程中进行。想要完全退出Arthas 可以执行stop命令</li>\n</ol>\n<h3 id=\"8、sm\"><a href=\"#8、sm\" class=\"headerlink\" title=\"8、sm\"></a>8、sm</h3><ol>\n<li>sm命令查找类的具体函数 sm java.math.RoundingMode</li>\n<li>-d ： 打印函数的具体属性 sm -d java.math.RoundingMode</li>\n<li>也可以查询指定的函数 java.math.RoundingMode <init></li>\n</ol>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["排错"],"tags":["Java"]},{"title":"Arthas使用教程第二章","url":"/2022/04/18/Arthas%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E7%AC%AC%E4%BA%8C%E7%AB%A0/","content":"<h1 id=\"Arthas-使用教程\"><a href=\"#Arthas-使用教程\" class=\"headerlink\" title=\"Arthas 使用教程\"></a>Arthas 使用教程</h1><h3 id=\"9、Ognl\"><a href=\"#9、Ognl\" class=\"headerlink\" title=\"9、Ognl\"></a>9、Ognl</h3><ol>\n<li><p>在Arthas中，可以动态执行代码</p>\n</li>\n<li><p>调用static 函数</p>\n<ol>\n<li>ognl ‘@java <a href=\"mailto:&#46;&#108;&#x61;&#110;&#103;&#46;&#83;&#x79;&#115;&#116;&#x65;&#109;&#x40;&#x6f;&#117;&#x74;&#x2e;&#x70;&#x72;&#x69;&#110;&#116;&#x6c;&#110;\">&#46;&#108;&#x61;&#110;&#103;&#46;&#83;&#x79;&#115;&#116;&#x65;&#109;&#x40;&#x6f;&#117;&#x74;&#x2e;&#x70;&#x72;&#x69;&#110;&#116;&#x6c;&#110;</a>(“hello ognl”)’;</li>\n<li>可以查看在自己代码终端打印了hello ognl</li>\n</ol>\n</li>\n<li><p>案例：</p>\n<ol>\n<li><p>查询usercontroller的ClassLoader, ,命令：&#x3D;&#x3D; sc -d packageName.className | grep classLoaderhash</p>\n</li>\n<li><p>通过ognl 命令执行打印的hash ， 命令：ognl hashValue</p>\n</li>\n<li><p>对于只有唯一实例的ClassLoader可以通过<code>--classLoaderClass</code>指定class name，使用起来更加方便 命令 ： ognl –classLoaderClass</p>\n</li>\n<li><p>获取静态类的静态字段</p>\n<ol>\n<li>获取<code>UserController</code>类里的<code>logger</code>字段：ognl –classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader @com.example.demo.arthas.user.UserController@logger</li>\n<li>-x : 可以控制返回值展开层数： ognl –classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader -x 2 @com.example.demo.arthas.user.UserController@logger</li>\n</ol>\n</li>\n<li><p>执行多行表达式，赋值给临时变量，返回一个List：ognl ‘#value1&#x3D;@System@getProperty(“java.home”), #value2&#x3D;@System@getProperty(“java.runtime.name”), {&amp;#35;value1, &amp;#35;value2}’<br><img src=\"/../../../images/image-20211125112821287.png\" alt=\"image-20211125112821287\"></p>\n</li>\n<li><p><a href=\"https://github.com/alibaba/arthas/issues/71\">OGNL特殊用法参考</a></p>\n</li>\n<li><p><a href=\"https://commons.apache.org/proper/commons-ognl/language-guide.html\">OGNL表达式官方指南</a></p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><h3 id=\"10、Web-Console\"><a href=\"#10、Web-Console\" class=\"headerlink\" title=\"10、Web Console\"></a>10、Web Console</h3><ol>\n<li>Arthas 支持通过WebSocket连接</li>\n</ol>\n<h3 id=\"11、arth-as-boot支持参数\"><a href=\"#11、arth-as-boot支持参数\" class=\"headerlink\" title=\"11、arth as-boot支持参数\"></a>11、arth as-boot支持参数</h3><p><code>arthas-boot.jar</code> 支持很多参数，可以执行 <code>java -jar arthas-boot.jar -h</code> 来查看。</p>\n<p>允许外部访问 </p>\n<ol>\n<li><p>默认情况下， arthas server侦听的是 <code>127.0.0.1</code> 这个IP，如果希望远程可以访问，可以使用<code>--target-ip</code>的参数。</p>\n<p>java -jar arthas-boot.jar –target-ip</p>\n<p><img src=\"/../../../images/image-20211125141804878.png\" alt=\"image-20211125141804878\"></p>\n</li>\n<li><p>列出所有版本</p>\n<p>java -jar arthas-boot.jar –versions</p>\n</li>\n<li><p>使用指定版本</p>\n<p>java -jar arthas-boot.jar –use-version 3.1.0</p>\n</li>\n<li><p>只监听Telnet端口 侦听Http端口</p>\n<p>java -jar arthas-boot.jar –telnet-port 9999 –http-port -1</p>\n</li>\n<li><p>打印运行的详情</p>\n<p>java -jar arthas-boot.jar -v</p>\n</li>\n</ol>\n<h3 id=\"12、介绍查看jvm信息命令\"><a href=\"#12、介绍查看jvm信息命令\" class=\"headerlink\" title=\"12、介绍查看jvm信息命令\"></a>12、介绍查看jvm信息命令</h3><ol>\n<li>sysprop: 可以打印所有的System Properties信息<ol>\n<li>也可以指定单个key ： sysprop java.version</li>\n<li>也可以通过grep来过滤：sysprop | grep user</li>\n<li>可以设置新的value：sysprop keyName keyvalue</li>\n</ol>\n</li>\n<li>sysenv :可以获取环境变量</li>\n<li>jvm： 打印jvm各种详细信息</li>\n<li>dashboard 查看当前系统的实时数据面板</li>\n<li>以上命令都可以通过按tab进行命令补全</li>\n<li>keymap：查看快捷键</li>\n<li>history：查看操作的所有的历史命令</li>\n</ol>\n<h3 id=\"13、arthas学习文档\"><a href=\"#13、arthas学习文档\" class=\"headerlink\" title=\"13、arthas学习文档\"></a>13、<a href=\"https://arthas.aliyun.com/doc/\">arthas学习文档</a></h3><p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["排错"],"tags":["Java"]},{"title":"Arthas案例分析","url":"/2022/04/18/Arthas%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/","content":"<h3 id=\"案例1-查询用户信息详情为例\"><a href=\"#案例1-查询用户信息详情为例\" class=\"headerlink\" title=\"案例1 [查询用户信息详情为例]\"></a>案例1 [查询用户信息详情为例]</h3><ol>\n<li><p>首先通过curl 访问接口服务地址</p>\n<p>curl 接口服务地址</p>\n<p>curl httl:&#x2F;&#x2F;localhost:8080&#x2F;user&#x2F;0</p>\n</li>\n<li><p>打开一个new terminal 使用watch命令</p>\n<p>watch packageName.UserController * ‘{params, throwExp}’;</p>\n<p>第一个参数是类型 支持通配</p>\n<p>第二个参数是函数名 支持通配</p>\n<p>访问接口服务地址 watch 命令会打印调用参数和异常</p>\n<p><img src=\"/../../../images/image-20211125120217655.png\" alt=\"image-20211125120217655\"></p>\n<p>可以看到实际抛出的异常是<code>IllegalArgumentException</code></p>\n<p>可以通过q或者ctrl+c退出watch命令模式</p>\n<p>如果想把获取的结果展开 可以用 <code>-x</code>参数：</p>\n<p><img src=\"/../../../images/image-20211125120456353.png\" alt=\"image-20211125120456353\"></p>\n</li>\n<li><p>返回值表达式</p>\n<ol>\n<li><p>第三个参数是<code>返回值表达式</code>，实际是一个ognl表达式，支持一些内置对象</p>\n<ol>\n<li>loader</li>\n<li>clazz</li>\n<li>method</li>\n<li>target</li>\n<li>params</li>\n<li>returnObj</li>\n<li>throwExp</li>\n<li>isBeore</li>\n<li>isThrow</li>\n<li>isReturn</li>\n</ol>\n<p>&#x3D;&#x3D; 可以利用这些内置对应对象组成不同表达式。&#x3D;&#x3D;</p>\n</li>\n<li><p>比如返回一个数组</p>\n<ol>\n<li>watch com.example.demo.arthas.user.UserController * ‘{params[0], target, returnObj}’</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>条件表达式</p>\n<ol>\n<li><p>watch 命令支持第4个参数写表达式</p>\n</li>\n<li><p>watch com.example.demo.arthas.user.UserController * returnObj ‘params[0] &gt; 100’</p>\n<p>curl httl:&#x2F;&#x2F;localhost:8080&#x2F;user&#x2F;1 watch没有检测结果</p>\n<p>curl httl:&#x2F;&#x2F;localhost:8080&#x2F;user&#x2F;101 watch会有如下输出</p>\n<p><img src=\"/../../../images/image-20211125121238734.png\" alt=\"image-20211125121238734\"></p>\n</li>\n</ol>\n</li>\n<li><p>异常时捕获</p>\n<ol>\n<li>watch 命令支持<code>-e</code>选项 表示只捕获抛出异常的请求</li>\n<li>命令：watch com.example.demo.arthas.user.UserController * “{params[0],throwExp}” -e</li>\n</ol>\n</li>\n<li><p>按照耗时进行过滤</p>\n<ol>\n<li>watch 命令支持按请求耗时进行过滤</li>\n<li>命令：watch com.example.demo.arthas.user.UserController * ‘{params, returnObj}’ ‘#cost&gt;200’</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"案例2-热更新代码\"><a href=\"#案例2-热更新代码\" class=\"headerlink\" title=\"案例2[热更新代码]\"></a>案例2[热更新代码]</h3><h4 id=\"下面通过jad-、-mc-、-redefine-命令实现动态更新代码的功能\"><a href=\"#下面通过jad-、-mc-、-redefine-命令实现动态更新代码的功能\" class=\"headerlink\" title=\"下面通过jad 、 mc 、 redefine 命令实现动态更新代码的功能\"></a>下面通过jad 、 mc 、 redefine 命令实现动态更新代码的功能</h4><p>情况分析：之前我们通过访问curl httl:&#x2F;&#x2F;localhost:8080&#x2F;user&#x2F;0 会出现一场情况。现在由于我们想避免这个异常且代码上线了我们如果去做呢？</p>\n<ol>\n<li><p>首先通过jad反编译UserCOntroller代码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">jad --source-only com.example.demo.arthas.user.UserController &gt; /tmp/UserController.java</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用编辑器打开<code>/tmp/UserOController</code>代码</p>\n<p>vim &#x2F;temp&#x2F;UserController，修改成如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@GetMapping(value=&#123;&quot;/user/&#123;id&#125;&quot;&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> User <span class=\"title function_\">findUserById</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> Integer id)</span> &#123;</span><br><span class=\"line\">    logger.info(<span class=\"string\">&quot;id: &#123;&#125;&quot;</span>, (Object)id);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (id != <span class=\"literal\">null</span> &amp;&amp; id &lt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(id, <span class=\"string\">&quot;name&quot;</span> + id);</span><br><span class=\"line\">        <span class=\"comment\">// throw new IllegalArgumentException(&quot;id &lt; 1&quot;);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(id.intValue(), <span class=\"string\">&quot;name&quot;</span> + id);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用sc查询加载UserController的ClassLoader</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sc -d *UserController | grep classLoaderHash</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用<code>mc</code>(Memory Compiler)命令来编译，并且通过<code>-c</code>或者<code>--classLoaderClass</code>参数指定ClassLoader：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">mc --classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader /tmp/UserController.java -d /tmp</span><br><span class=\"line\"></span><br><span class=\"line\">也可以通过`mc -c &lt;classLoaderHash&gt; /tmp/UserController.java -d /tmp`，使用`-c`参数指定ClassLoaderHash:</span><br><span class=\"line\"></span><br><span class=\"line\">mc -c 1be6f5c3 /tmp/UserController.java -d /tmp</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在使用redefine命令重新加载新编译好的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">redefine /tmp/com/example/demo/arthas/user/UserController.class</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../../../images/image-20211125123026712.png\" alt=\"image-20211125123026712\"></p>\n</li>\n<li><p>成功后你在访问 curl httl:&#x2F;&#x2F;localhost:8080&#x2F;user&#x2F;0 就不会有问题了</p>\n</li>\n</ol>\n<h3 id=\"案例3-动态更新应用Logger-Level-单个更新某个控制层的和更新项目所有的\"><a href=\"#案例3-动态更新应用Logger-Level-单个更新某个控制层的和更新项目所有的\" class=\"headerlink\" title=\"案例3[动态更新应用Logger Level(单个更新某个控制层的和更新项目所有的)]\"></a>案例3[动态更新应用Logger Level(单个更新某个控制层的和更新项目所有的)]</h3><ol>\n<li><p>查询UserController的ClassLoader</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sc -d com.example.demo.arthas.user.UserController | grep classLoaderHash</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../../../images/image-20211125123503066.png\" alt=\"image-20211125123503066\"></p>\n</li>\n<li><p>用ognl获取logger</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">ognl --classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader &#x27;@com.example.demo.arthas.user.UserController@logger&#x27;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../../../images/image-20211125123619517.png\" alt=\"image-20211125123619517\"></p>\n<p>可以知道<code>UserController@logger</code>实际使用的是logback。可以看到<code>level=null</code>，则说明实际最终的level是从<code>root</code> logger里来的。</p>\n</li>\n<li><p>单独设置UserController的loggerLevel</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">ognl --classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader &#x27;@com.example.demo.arthas.user.UserController@logger.setLevel(@ch.qos.logback.classic.Level@DEBUG)&#x27;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../../../images/image-20211125123815136.png\" alt=\"image-20211125123815136\"></p>\n</li>\n<li><p>修改全局的LoggerLevel</p>\n<p>通过获取<code>root</code> logger，可以修改全局的logger level：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">ognl --classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader &#x27;@org.slf4j.LoggerFactory@getLogger(&quot;root&quot;).setLevel(@ch.qos.logback.classic.Level@DEBUG)&#x27;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"案例4-排除logger冲突问题\"><a href=\"#案例4-排除logger冲突问题\" class=\"headerlink\" title=\"案例4[排除logger冲突问题]\"></a>案例4[排除logger冲突问题]</h3><p>以<code>UserController</code>为例，它使用的是slf4j api，但实际使用到的logger系统是logback。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">ognl --classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader &#x27;@com.example.demo.arthas.user.UserController@logger&#x27;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>获取logback实际加载的配置文件</p>\n<p>ognl –classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader ‘#map1&#x3D;@org.slf4j.LoggerFactory@getLogger(“root”).loggerContext.objectMap, #map1.get(“CONFIGURATION_WATCH_LIST”)’</p>\n<p><img src=\"/../../../images/image-20211125133400839.png\" alt=\"image-20211125133400839\"></p>\n</li>\n<li><p>使用classloader命令查询可能存在的logger配置文件</p>\n<p>classloader –classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader -r logback-spring.xml</p>\n<p><img src=\"/../../../images/image-20211125133616701.png\" alt=\"image-20211125133616701\"></p>\n<p>可以试着加载容易冲突的文件</p>\n<p>classloader –classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader -r logback.xml</p>\n<p>classloader –classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader -r log4j.properties</p>\n<p><img src=\"/../../../images/image-20211125133806053.png\" alt=\"image-20211125133806053\"></p>\n</li>\n</ol>\n<h3 id=\"案例5-获取Spring-Context\"><a href=\"#案例5-获取Spring-Context\" class=\"headerlink\" title=\"案例5[获取Spring Context]\"></a>案例5[获取Spring Context]</h3><p>目的：展示获取Spring context 在获取bean， 然后调用函数</p>\n<ol>\n<li><p>使用tt命令获取到Spring Context</p>\n<ol>\n<li>tt是可以记录指定方法每次调用的入参和返回信息，并且能对这些不同的时间下调用进行观测</li>\n<li><a href=\"https://arthas.aliyun.com/doc/tt.html\">具体tt介绍</a></li>\n</ol>\n</li>\n<li><p><code>tt</code>命令捕获到了一个请求：：tt -t org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter invokeHandlerMethod</p>\n</li>\n<li><p>访问接口服务</p>\n<p><img src=\"/../../../images/image-20211125134509544.png\" alt=\"image-20211125134509544\"></p>\n</li>\n<li><p>使用tt命令从调用记录里获取到spring context：</p>\n<p>tt -i 1000 -w ‘target.getApplicationContext()’</p>\n</li>\n<li><p>获取springbean并调用函数</p>\n<p>tt -i 1000 -w ‘target.getApplicationContext().getBean(“helloWorldService”).getHelloMessage()’</p>\n<p><img src=\"/../../../images/image-20211125134709827.png\" alt=\"image-20211125134709827\"></p>\n</li>\n</ol>\n<h3 id=\"案例6-排查http请求返回401\"><a href=\"#案例6-排查http请求返回401\" class=\"headerlink\" title=\"案例6[排查http请求返回401]\"></a>案例6[排查http请求返回401]</h3><p>日常开发我们也会遇到401问题。如Something went wrong: 401 Unauthorized，我们现在想知道是哪个filter拦截了。怎么排查呢？</p>\n<ol>\n<li><p>跟踪所有的Filter函数</p>\n<p>trace javax.servlet.Fileter.* (trace和watch是一个监听命令)</p>\n<p>访问具体权限接口在terminal会打印filter内容</p>\n<p><img src=\"/../../../images/image-20211125135238722.png\" alt=\"image-20211125135238722\"></p>\n</li>\n<li><p>使用stack获取调用栈</p>\n<p>stack javax.servlet.http.HttpServletResponse sendError ‘params[0]&#x3D;&#x3D;401’</p>\n<p>访问权限接口</p>\n<p><img src=\"/../../../images/image-20211125135209283.png\" alt=\"image-20211125135209283\"></p>\n<p><img src=\"/../../../images/image-20211125135335952.png\" alt=\"image-20211125135335952\"><br>根据调用栈提示可以快速定位问题</p>\n</li>\n</ol>\n<h3 id=\"案例7-排查Http请求返回404\"><a href=\"#案例7-排查Http请求返回404\" class=\"headerlink\" title=\"案例7[排查Http请求返回404]\"></a>案例7[排查Http请求返回404]</h3><p>开发404常见，原因是资源找不到。那么到底是哪个servlet处理这个请求呢？</p>\n<ol>\n<li><p>跟踪所有的servlet函数</p>\n<p>trace javax.servlet.Servlet * &gt; &#x2F;tmp&#x2F;servlet.txt</p>\n<p>打开tmp文件夹中的servlet.txt查看</p>\n<p><img src=\"/../../../images/image-20211125135736470.png\" alt=\"image-20211125135736470\"></p>\n<p>可以定位到最终处理的是SpringFramework</p>\n</li>\n</ol>\n<h3 id=\"案例8-理解Spring-Boot应用的ClassLoader结构\"><a href=\"#案例8-理解Spring-Boot应用的ClassLoader结构\" class=\"headerlink\" title=\"案例8[理解Spring Boot应用的ClassLoader结构]\"></a>案例8[理解Spring Boot应用的ClassLoader结构]</h3><ol>\n<li><p>列出所有的ClassLoader</p>\n<p>classloader -l</p>\n</li>\n<li><p>列出上面的<code>org.apache.jasper.servlet.JasperLoader</code>加载的类：</p>\n<p>classloader -a –classLoaderClass org.apache.jasper.servlet.JasperLoader</p>\n<ul>\n<li>注：同ognl, 也可用<code>-c &lt;hashcode&gt;</code>而不用<code>--classLoaderClass</code>指定</li>\n</ul>\n</li>\n<li><p>反编译jsp代码</p>\n<p>jad org.apache.jsp.jsp.hello_jsp</p>\n</li>\n<li><p>查询ClassLoader树</p>\n<p>classloader -t</p>\n<p><img src=\"/../../../images/image-20211125140253114.png\" alt=\"image-20211125140253114\"></p>\n</li>\n<li><p>列出ClassLoader的urls</p>\n<p>比如上面查看到的spring LaunchedURLClassLoader的 hashcode是<code>1be6f5c3</code>，可以通过<code>-c</code>或者<code>--classLoaderClass</code>参数来列出它的所有urls：</p>\n<p>classloader –classLoaderClass</p>\n</li>\n<li><p>加载指定ClassLoader里的资源文件</p>\n<p>classloader –classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader -r logback-spring.xml</p>\n</li>\n<li><p>尝试加载指定的类</p>\n<p>比如用上面的spring LaunchedURLClassLoader 尝试加载 <code>java.lang.String</code> ：</p>\n<p>classloader –classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader –load java.lang.String</p>\n</li>\n</ol>\n<h3 id=\"案例9-查询Top-N-线程\"><a href=\"#案例9-查询Top-N-线程\" class=\"headerlink\" title=\"案例9[查询Top N 线程]\"></a>案例9[查询Top N 线程]</h3><ol>\n<li><p>查询所有线程信息</p>\n<p>thread</p>\n</li>\n<li><p>查看具体线程的栈</p>\n<p>查询线程ID16的栈</p>\n<p>thread 16</p>\n</li>\n<li><p>查看CPU使用率top n 线程栈</p>\n<p>thread -n 3</p>\n<p>查询5秒内cpu使用率top n线程栈</p>\n<p>thread -n 3 -i 5000</p>\n</li>\n<li><p>查看线程是否有阻塞</p>\n<p>thread -b</p>\n</li>\n</ol>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["排错"],"tags":["Java"]},{"title":"Docker搭建mysql主从复制","url":"/2022/04/17/Docker%E6%90%AD%E5%BB%BAmysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/","content":"<h3 id=\"一、通过docker拉去mysql镜像\"><a href=\"#一、通过docker拉去mysql镜像\" class=\"headerlink\" title=\"一、通过docker拉去mysql镜像\"></a>一、通过docker拉去mysql镜像</h3><ol>\n<li>docker pull mysql:5.7</li>\n</ol>\n<h3 id=\"二、启动主mysql服务\"><a href=\"#二、启动主mysql服务\" class=\"headerlink\" title=\"二、启动主mysql服务\"></a>二、启动主mysql服务</h3><ol>\n<li><p>启动主mysql 服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -p 3307:3306 --name mysql-master \\</span><br><span class=\"line\">-v /mydata/mysql-master/log:/var/log/mysql \\</span><br><span class=\"line\">-v /mydata/mysql-master/data:/var/lib/mysql \\</span><br><span class=\"line\">-v /mydata/mysql-master/conf:/etc/mysql \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=root  \\</span><br><span class=\"line\">-d mysql:5.7</span><br><span class=\"line\"></span><br><span class=\"line\">参数解释</span><br><span class=\"line\">\t-p 指定端口 映射端口:主机端口</span><br><span class=\"line\">\t--name 指定启动镜像别名</span><br><span class=\"line\">\t-v 挂载目录（数据卷）</span><br><span class=\"line\">\t-d 后台启动</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在mysql的配置文件夹<code>/mydata/mysql-master/conf</code>中创建一个配置文件<code>my.cnf</code>：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">1、进入目录 cd /mydata/mysql-master/conf</span><br><span class=\"line\">2、使用命令 vim my.cnf</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 设置server_id，同一局域网中需要唯一</span></span></span><br><span class=\"line\">server_id=101</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 指定不需要同步的数据库名称</span></span></span><br><span class=\"line\">binlog-ignore-db=mysql</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 开启二进制日志功能</span></span></span><br><span class=\"line\">log-bin=mall-mysql-bin</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 设置二进制日志使用内存大小（事务）</span></span></span><br><span class=\"line\">binlog_cache_size=1M</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 设置使用的二进制日志格式（mixed,statement,row）</span></span></span><br><span class=\"line\">binlog_format=mixed</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 二进制日志过期清理时间。默认值为0，表示不自动清理。</span></span></span><br><span class=\"line\">expire_logs_days=7</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span></span></span><br><span class=\"line\">slave_skip_errors=1062</span><br><span class=\"line\"></span><br><span class=\"line\">init_connect=&#x27;SET collation_connection = utf8_unicode_ci&#x27;</span><br><span class=\"line\">init_connect=&#x27;SET collation_connection = utf8_unicode_ci&#x27;</span><br><span class=\"line\">init_connect=&#x27;SET NAMES utf8&#x27;</span><br><span class=\"line\">character-set-server=utf8</span><br><span class=\"line\">collation-server=utf8_unicode_ci</span><br><span class=\"line\">skip-character-set-client-handshake</span><br><span class=\"line\">skip-name-resolve</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 指定字符集</span></span></span><br><span class=\"line\">[client]</span><br><span class=\"line\">default-character-set=utf8</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\">default-character-set=utf8</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启mysql-master实例：<font color=\"#FF0000\">docker restart mysql-master</font></p>\n</li>\n<li><p>进入mysql-master容器：<font color=\"#FF0000\">docker exec -it mysql-master &#x2F;bin&#x2F;bash</font></p>\n<p><img src=\"/../../../images/imagi-20210401113202243.png\" alt=\"image-20210401113202243\"></p>\n</li>\n<li><p>进入容器后输入mysql -uroot -proot</p>\n<p><img src=\"/../../../images/image-20210401113252684.png\" alt=\"image-20210401113252684\"></p>\n</li>\n<li><p>创建数据同步用户</p>\n<ol>\n<li><p>命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">CREATE USER &#x27;slave&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span><br><span class=\"line\">GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &#x27;slave&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 到时候创建的这个用户需要对应配置从服务器里面参数的master_user和master_password</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><img src=\"/../../../images/image-20210401114807485.png\" alt=\"image-20210401114807485\"></p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"三、-启动从mysql服务\"><a href=\"#三、-启动从mysql服务\" class=\"headerlink\" title=\"三、 启动从mysql服务\"></a>三、 启动从mysql服务</h3><ol>\n<li><p>服务启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -p 3308:3306 --name mysql-slave \\</span><br><span class=\"line\">-v /mydata/mysql-slave/log:/var/log/mysql \\</span><br><span class=\"line\">-v /mydata/mysql-slave/data:/var/lib/mysql \\</span><br><span class=\"line\">-v /mydata/mysql-slave/conf:/etc/mysql \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=root  \\</span><br><span class=\"line\">-d mysql:5.7</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在mysql的配置文件夹<code>/mydata/mysql-slave/conf</code>中创建一个配置文件<code>my.cnf</code>：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">1、进入目录 cd /mydata/mysql-master/conf</span><br><span class=\"line\">2、使用命令 vim my.cnf</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 设置server_id，同一局域网中需要唯一</span></span></span><br><span class=\"line\">server_id=102</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 指定不需要同步的数据库名称</span></span></span><br><span class=\"line\">binlog-ignore-db=mysql</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 开启二进制日志功能，以备Slave作为其它数据库实例的Master时使用</span></span></span><br><span class=\"line\">log-bin=mall-mysql-slave1-bin</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 设置二进制日志使用内存大小（事务）</span></span></span><br><span class=\"line\">binlog_cache_size=1M</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 设置使用的二进制日志格式（mixed,statement,row）</span></span></span><br><span class=\"line\">binlog_format=mixed</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 二进制日志过期清理时间。默认值为0，表示不自动清理。</span></span></span><br><span class=\"line\">expire_logs_days=7</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span></span></span><br><span class=\"line\">slave_skip_errors=1062</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># relay_log配置中继日志</span></span></span><br><span class=\"line\">relay_log=mall-mysql-relay-bin</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># log_slave_updates表示slave将复制事件写进自己的二进制日志</span></span></span><br><span class=\"line\">log_slave_updates=1</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># slave设置为只读（具有super权限的用户除外）</span></span></span><br><span class=\"line\">read_only=1</span><br><span class=\"line\"></span><br><span class=\"line\">init_connect=&#x27;SET collation_connection = utf8_unicode_ci&#x27;</span><br><span class=\"line\">init_connect=&#x27;SET collation_connection = utf8_unicode_ci&#x27;</span><br><span class=\"line\">init_connect=&#x27;SET NAMES utf8&#x27;</span><br><span class=\"line\">character-set-server=utf8</span><br><span class=\"line\">collation-server=utf8_unicode_ci</span><br><span class=\"line\">skip-character-set-client-handshake</span><br><span class=\"line\">skip-name-resolve</span><br><span class=\"line\"></span><br><span class=\"line\">[client]</span><br><span class=\"line\">default-character-set=utf8</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\">default-character-set=utf8 </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启mysql-slave实例：<font color=\"#FF0000\">docker restart mysql-slave</font></p>\n<ol>\n<li>查询主数据状态：<font color=\"#FF0000\">show master status</font></li>\n</ol>\n<p><img src=\"/../../../images/image-20210401114044535.png\" alt=\"image-20210401114044535\"></p>\n</li>\n<li><p>进入从mysql服务 <font color=\"#FF0000\">docker exec -it mysql-slave &#x2F;bin&#x2F;bash</font></p>\n</li>\n<li><p>连接mysql，输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">change master to master_host=&#x27;192.168.0.88&#x27;, master_user=&#x27;slave&#x27;, master_password=&#x27;123456&#x27;, master_port=3307, master_log_file=&#x27;mall-mysql-bin.000003&#x27;, master_log_pos=154, master_connect_retry=30;  </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../../../images/image-20210401114456682.png\" alt=\"image-20210401114456682\"></p>\n<p>参数命令详解</p>\n<ol>\n<li>master_host：主数据库的IP地址；</li>\n<li>master_port：主数据库的运行端口；</li>\n<li>master_user：在主数据库创建的用于同步数据的用户账号；</li>\n<li>master_password：在主数据库创建的用于同步数据的用户密码；</li>\n<li>master_log_file：指定从数据库要复制数据的日志文件，通过查看主数据的状态，获取File参数；</li>\n<li>master_log_pos：指定从数据库从哪个位置开始复制数据，通过查看主数据的状态，获取Position参数；</li>\n<li>master_connect_retry：连接失败重试的时间间隔，单位为秒。</li>\n</ol>\n</li>\n<li><p>查询从数据库状态： <font color=\"#FF0000\">show slave status</font></p>\n<p><img src=\"/../../../images/image-20210401115118759.png\" alt=\"image-20210401115118759\"></p>\n<p>如果两个都为NO表示还没有开始同步，需要手动开启同步，使用命令：<font color=\"#FF0000\">start slave</font></p>\n</li>\n<li><p>测试的话，你可以在你的主库创建一个数据库test，然后在主从mysql客户端输入命令 ：<font color=\"#FF0000\">show databases</font></p>\n</li>\n</ol>\n<p>以上是搭建主从复制的简单流程</p>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","tags":["运维"]},{"title":"Map中的computeIfAbsent方法的使用","url":"/2022/06/29/Map%E4%B8%AD%E7%9A%84computeIfAbsent%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8/","content":"<h1 id=\"Map中的computeIfAbsent方法的使用\"><a href=\"#Map中的computeIfAbsent方法的使用\" class=\"headerlink\" title=\"Map中的computeIfAbsent方法的使用\"></a>Map中的computeIfAbsent方法的使用</h1><h3 id=\"一、概述\"><a href=\"#一、概述\" class=\"headerlink\" title=\"一、概述\"></a>一、概述</h3><p>今天在阅读代码时看到Map中的computeIfAbsent方法，最开始么有整明白computeIfAbsent方法。就去翻阅资料啦。Map中computeIfAbsent方法是java8新增的一个方法，方法如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">default</span> V <span class=\"title function_\">computeIfAbsent</span><span class=\"params\">(K key,</span></span><br><span class=\"line\"><span class=\"params\">            Function&lt;? <span class=\"built_in\">super</span> K, ? extends V&gt; mappingFunction)</span> &#123;</span><br><span class=\"line\">        Objects.requireNonNull(mappingFunction);</span><br><span class=\"line\">        V v;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((v = get(key)) == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            V newValue;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((newValue = mappingFunction.apply(key)) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                put(key, newValue);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> newValue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>Function是一个<code>函数式接口</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">R <span class=\"title function_\">apply</span><span class=\"params\">(T t)</span>;</span><br></pre></td></tr></table></figure>\n\n<p>这个方法首先判断map中是否存在指定的key值，如果不存在，会自动调用mappingFunction(key)计算key的value，然后将key &#x3D; value放入到缓存Map,java8会使用thread-safe的方式从cache中存取记录</p>\n<p>如果<code>mappingFunction(key)</code>返回的值为<code>null</code>或抛出异常，则不会有记录存入<code>map</code></p>\n<h3 id=\"二、代码示例\"><a href=\"#二、代码示例\" class=\"headerlink\" title=\"二、代码示例\"></a>二、代码示例</h3><ol>\n<li><p>示例一：computeIfAbsent基础用法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Map&lt;String, Integer&gt; prices = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">prices.put(<span class=\"string\">&quot;apple&quot;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">prices.put(<span class=\"string\">&quot;banana&quot;</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">prices.put(<span class=\"string\">&quot;orange&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">pear</span> <span class=\"operator\">=</span> prices.computeIfAbsent(<span class=\"string\">&quot;pear&quot;</span>, k -&gt; <span class=\"number\">10</span>);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;pear price=&quot;</span> + pear);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;update map&quot;</span> + prices);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">pear price=<span class=\"number\">10</span></span><br><span class=\"line\">update map&#123;banana=<span class=\"number\">4</span>, orange=<span class=\"number\">10</span>, apple=<span class=\"number\">2</span>, pear=<span class=\"number\">10</span>&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>示例二：统计一个List中元素出现的个数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Map&lt;String, AtomicInteger&gt; counts = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        List&lt;String&gt; list = Lists.newArrayList(<span class=\"string\">&quot;猫&quot;</span>, <span class=\"string\">&quot;狗&quot;</span>, <span class=\"string\">&quot;猫&quot;</span>, <span class=\"string\">&quot;狗&quot;</span>, <span class=\"string\">&quot;狗&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;狗&quot;</span>);</span><br><span class=\"line\">        list.forEach(str -&gt; counts.computeIfAbsent(str, k -&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">AtomicInteger</span>()).getAndIncrement());</span><br><span class=\"line\">        counts.forEach((k,v)-&gt; System.out.println(k + <span class=\"string\">&quot;:&quot;</span> + v));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">狗:<span class=\"number\">4</span></span><br><span class=\"line\">猫:<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>示例三：把0~9个数字进行归类，取模运算后，结果相同的数字放一起</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 没使用computeIfAbsent</span></span><br><span class=\"line\">Map&lt;Integer, List&lt;Integer&gt;&gt; unUseComputeIfAbsentMap = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> i % <span class=\"number\">5</span>;</span><br><span class=\"line\">  List&lt;Integer&gt; integers = unUseComputeIfAbsentMap.get(key);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (integers == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    integers = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    unUseComputeIfAbsentMap.put(key, integers);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  integers.add(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;没使用computeIfAbsent&quot;</span> + unUseComputeIfAbsentMap);</span><br><span class=\"line\"><span class=\"comment\">// 使用computeIfAbsent</span></span><br><span class=\"line\">Map&lt;Integer, List&lt;Integer&gt;&gt; useComputeIfAbsentMap = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> i % <span class=\"number\">5</span>;</span><br><span class=\"line\">  useComputeIfAbsentMap.computeIfAbsent(key, k -&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;()).add(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;使用computeIfAbsent map&quot;</span> + useComputeIfAbsentMap);</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"三、性能检测\"><a href=\"#三、性能检测\" class=\"headerlink\" title=\"三、性能检测\"></a>三、性能检测</h3><ol>\n<li><p>普通实现方式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 普通的实现方式 普通方式使用大量的计算，存在性能问题. 并且计算量随着n的增加呈指数级增加，需要用到一些缓存策略，并且是线程安全的.</span></span><br><span class=\"line\"><span class=\"comment\">* </span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> n</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">fibonacci</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span> || n == <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n;</span><br><span class=\"line\"></span><br><span class=\"line\">  System.out.println(<span class=\"string\">&quot;calculating Fibonacci(&quot;</span> + n + <span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fibonacci(n - <span class=\"number\">2</span>) + fibonacci(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出结果</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">7</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">5</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">3</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">4</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">3</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">6</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">4</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">3</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">5</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">3</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">4</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">3</span>)</span></span><br><span class=\"line\">calculating <span class=\"title function_\">Fibonacci</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span><br><span class=\"line\">Fibonacci(<span class=\"number\">7</span>) = <span class=\"number\">13</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Java7</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 在java7中的实现方式</span></span><br><span class=\"line\"><span class=\"comment\">* 在java7中，通过synchronized进行线程同步，检查缓存是否存在key对应的值，如果不存在才进行计算并放入缓存中</span></span><br><span class=\"line\"><span class=\"comment\">* 为了更好的性能，需要使用 double-checked locking，那样代码会更复杂</span></span><br><span class=\"line\"><span class=\"comment\">* </span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> n</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">fibonacciJava7</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span> || n == <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">Integer</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> cache.get(n);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (result == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (cache) &#123;</span><br><span class=\"line\">      result = cache.get(n);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (result == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;calculating FibonacciJava7(&quot;</span> + n + <span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">        result = fibonacciJava7(n - <span class=\"number\">2</span>) + fibonacciJava7(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">        cache.put(n, result);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 输出结果</span></span><br><span class=\"line\">FibonacciJava7(<span class=\"number\">7</span>) = <span class=\"number\">13</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Java8</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 采用java8的本地缓存方式 如果缓存MAP中不存在指定key的值，会自动调用mappingFunction(key)计算key的value</span></span><br><span class=\"line\"><span class=\"comment\">* 然后将key = value放入到缓存Map,java8会使用thread-safe的方式从cache中存取记录</span></span><br><span class=\"line\"><span class=\"comment\">* </span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> n</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">fibonacciJava8</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> cache.computeIfAbsent(n, (key) -&gt; &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;calculating FibonacciJava8 &quot;</span> + n);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fibonacciJava8(n - <span class=\"number\">2</span>) + fibonacciJava8(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">calculating FibonacciJava8 <span class=\"number\">7</span></span><br><span class=\"line\">calculating FibonacciJava8 <span class=\"number\">5</span></span><br><span class=\"line\">calculating FibonacciJava8 <span class=\"number\">3</span></span><br><span class=\"line\">calculating FibonacciJava8 <span class=\"number\">2</span></span><br><span class=\"line\">calculating FibonacciJava8 <span class=\"number\">4</span></span><br><span class=\"line\">calculating FibonacciJava8 <span class=\"number\">6</span></span><br><span class=\"line\">FibonacciJava8(<span class=\"number\">7</span>) = <span class=\"number\">13</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><a href=\"http://www.manongjc.com/detail/18-exbxxblysbloqcn.html\">参考地址</a></p>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["Java"],"tags":["Map"]},{"title":"jdk命令工具的使用","url":"/2022/04/17/jdk%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/","content":"<h1 id=\"常见jdk工具的使用\"><a href=\"#常见jdk工具的使用\" class=\"headerlink\" title=\"常见jdk工具的使用\"></a>常见jdk工具的使用</h1><h3 id=\"一、jps\"><a href=\"#一、jps\" class=\"headerlink\" title=\"一、jps\"></a>一、jps</h3><ol>\n<li><p>作用：列出正在运行的虚拟机进程，并显示虚拟机执行主类函数所在的类名称以及进程的本地虚拟机唯一ID。</p>\n</li>\n<li><p>命令格式：jps [options] [hostid]</p>\n</li>\n<li><p>参数解释：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">-q 显示进程ID</span><br><span class=\"line\">-m 显示进程id，主类名，以及传入main方法的参数</span><br><span class=\"line\">-l 显示进程id 主类名</span><br><span class=\"line\">-v 显示进程id，主类名称，以及传JVM的参数</span><br><span class=\"line\">-V 显示进程id 主类名</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"二、jstat\"><a href=\"#二、jstat\" class=\"headerlink\" title=\"二、jstat\"></a>二、jstat</h3><ol>\n<li><p>作用：监视虚拟机各种运行状态信息，可以显示本地或者远程虚拟机进程中的类装载、内存、垃圾收集、JIT编译等运行数据</p>\n</li>\n<li><p>命令格式：jstat [options vmid [interval[count]]]</p>\n</li>\n<li><p>参数解释：</p>\n<ol>\n<li><p>第一个参数options：代表用户希望查询的虚拟机信息，主要分为3类：类装载、垃圾收集和运行编译状况，具体参数如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">-class 显示有关类加载器行为的统计信息</span><br><span class=\"line\">  \t输出参数详解：Loaded：已加载的类数 Bytes：加载的kb数 Unloaded：卸载的类数 Bytes：卸载的kb数</span><br><span class=\"line\">-compiler：显示有关java Hotspot VM即时编译器行为的统计信息</span><br><span class=\"line\">  输出参数详解：Compiled：执行编译任务数 Failed：编译任务数失败 Invalid：无效的编译任务数 Time：执行编译任务花费的时间 FailedType：上次失败编译的编译类型 FailedMethos：上次失败编译的类名和方法</span><br><span class=\"line\">-gc：显示有关垃圾收集堆行为的统计信息</span><br><span class=\"line\">-gccapacity：显示有关各个垃圾回收代容量及其相应空间的统计信息</span><br><span class=\"line\">-gccause：显示有关垃圾收集统计信息（同-gcutil）,以及上一次和当前垃圾收集事件的原因</span><br><span class=\"line\">-gcnew：显示新生代行为的统计信息</span><br><span class=\"line\">-gcnewcapacity：显示有关新生代大小机器相应的统计信息</span><br><span class=\"line\">-gcold：显示有关老年代行为的统计信息和元空间统计信息</span><br><span class=\"line\">-gcoldcapacity：显示有关老年代大小的统计</span><br><span class=\"line\">-gcmetacapacity：显示有关元空间大小的统计信息</span><br><span class=\"line\">-gcutil：显示有关垃圾收集统计信息</span><br><span class=\"line\">  输出参数详解：S0：幸存者空间0利用率占该空间当前容量的百分比 S1:幸存者空间1利用率占空间当前容量的百分比 E:Eden空间利用率占空间当前容量的百分比 O:老年代利用率占空间当前容量的百分比 M:元空间利用率占用当前容量的百分比 CCS:压缩的类空间利用率，百分比展示 YGC：新生代GC事件的数量 YGCT：新生代垃圾回收的时间 FGC：完整GC事件的数量 FGCT：完整的垃圾收集时间 GCT：总的垃圾收集时间</span><br><span class=\"line\">-printcompilation：显示java HotSpot VM编译方法的统计信息</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>第二个参数vmid：如果本地虚拟机进程，vmid和本地虚拟机唯一ID是一致的，如果是远程虚拟机进程，那么vmid的格式是：protocol:lvmid[@hostname[:port]&#x2F;servername]</p>\n</li>\n<li><p>第三个参数：interval</p>\n<ol>\n<li>采样间隔，单位为秒或者毫秒</li>\n<li>指定后，jstat 命令将在每个间隔产生其输出</li>\n</ol>\n</li>\n<li><p>第四个参数：count</p>\n<ol>\n<li>采集样本的数量</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"三、Jinfo\"><a href=\"#三、Jinfo\" class=\"headerlink\" title=\"三、Jinfo\"></a>三、Jinfo</h3><ol>\n<li><p>作用：实时查看和调整虚拟机各项参数</p>\n</li>\n<li><p>命令格式：jinfo [options] <pid></p>\n</li>\n<li><p>参数解释：</p>\n<ol>\n<li><p>第一个参数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">no option：输出全部参数和系统属性</span><br><span class=\"line\">-flag name ：输出对应名称的参数</span><br><span class=\"line\">-flag [+ | -]name:开启或者关闭对应名称的参数</span><br><span class=\"line\">-flag name=value：设定对应名称的参数</span><br><span class=\"line\">-flags：输出全部的参数</span><br><span class=\"line\">-sysprops：输出系统属性</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>举例</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">命令：jinfo pid</span><br><span class=\"line\">描述：输出当前jvm进程的全部参数和系统属性</span><br><span class=\"line\"></span><br><span class=\"line\">命令：jinfo -flag PrintGc pid</span><br><span class=\"line\">描述：输出虚拟机参数PrintGc的值</span><br><span class=\"line\"></span><br><span class=\"line\">命令：jinfo -flags pid</span><br><span class=\"line\">描述：输入虚拟机全部参数</span><br><span class=\"line\">  </span><br><span class=\"line\">命令：jinfo -flag [+|-]PrintGC pid</span><br><span class=\"line\">描述：开启PrintGC参数</span><br><span class=\"line\">  </span><br><span class=\"line\">命令：jinfo -flag HeapDumpPath pid</span><br><span class=\"line\">描述：查询dump文件目录位置</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n<h3 id=\"四、jmap\"><a href=\"#四、jmap\" class=\"headerlink\" title=\"四、jmap\"></a>四、jmap</h3><ol>\n<li><p>作用：是一个多功能命令，它可以生成java程序的dump文件，也可以查看堆内对象信息、查看ClassLoader的信息以及finalizer队列</p>\n</li>\n<li><p>命令格式：jmap [options] <pid></p>\n</li>\n<li><p>参数解释：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">no option :查看进程内存映像信息，类似solaris pmap命令</span><br><span class=\"line\">heap：超现实Java堆详细信息</span><br><span class=\"line\">histo[live]：显示堆对象的统计信息</span><br><span class=\"line\">clstats:打印类加载器信息</span><br><span class=\"line\">finalizerinfo：显示F-queue队列等待Finalizer线程执行finalizer方法的对象</span><br><span class=\"line\">dump&lt;dump-options&gt;:生成堆转储快照</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>举例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">命令：jmap pid</span><br><span class=\"line\">描述：查看进程的内存映像信息</span><br><span class=\"line\">使用不带选项参数的jmap打印共享对象映射，将会打印目标虚拟机中加载的每个共享对象的起始地址、映射大小以及共享对象文件的路径全称</span><br><span class=\"line\"></span><br><span class=\"line\">命令：jmap -heap pid</span><br><span class=\"line\">描述：显示java堆详细信息</span><br><span class=\"line\">打印一个堆的摘要信息，包括使用的GC算法、堆配置信息和各内存区域内存使用信息</span><br><span class=\"line\"></span><br><span class=\"line\">命令：jmap -histo pid</span><br><span class=\"line\">描述：显示堆中对象的统计信息</span><br><span class=\"line\">其中包括每个java类，对象数量、内存大小、完全限定的类名、打印的虚拟机内部类名将会带有一个‘*’前缀。如果制定了live子选项，则只会计算活动的对象</span><br><span class=\"line\"></span><br><span class=\"line\">命令：jmap -clstats pid</span><br><span class=\"line\">描述：打印类加载器的信息</span><br><span class=\"line\">-clstats是permstat的替代方案，在JDK8之前，-permstat用来打印类加载器的数据</span><br><span class=\"line\">打印Java堆内存的永久保存区域的类加载器的智能统计信息，对于每个类加载器而言，他的名称活跃度地址、父类加载器，它所加载的类的数量和大小都会被打印</span><br><span class=\"line\"></span><br><span class=\"line\">命令：jmap -finalizerinfo pid</span><br><span class=\"line\">描述：打印等待终结的对象信息</span><br><span class=\"line\">Number of objects pending for finalizerinfo：0说明当前F-QUEUE队列中没有等待finalizer线程执行finalizer方法的对象</span><br><span class=\"line\"></span><br><span class=\"line\">命令：jmap -dump:live,format=b,file=jmap.bin &lt;pid&gt;</span><br><span class=\"line\">描述：生成堆转存储快照dump文件</span><br><span class=\"line\">以二进制格式转存储java堆到制定filename的文件中。live子选项是可选。如果制定live子选项，堆中只有活动的对象会被存储，想要浏览heap dump，你可以使用jhat命令</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"五、jhat\"><a href=\"#五、jhat\" class=\"headerlink\" title=\"五、jhat\"></a>五、jhat</h3><ol>\n<li><p>作用：与jmap搭配使用来分析jmap生产的堆转存储快照。jhat内置一个微型的HTTP&#x2F;HTML服务器，生产dump文件的分析结果后，可以在浏览器中查看。一般不会在部署应用程序服务器直接分析，。替代工具：VisualVM、Ecplise Memory Analyzer、IBM HeapAnalyzer等工具</p>\n</li>\n<li><p>命令格式：jhat [options] 堆转储文件</p>\n</li>\n<li><p>参数解释</p>\n<ol>\n<li><p>第一个参数：options</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">[-stack &lt;bool&gt;]:开关对象分配调用栈跟踪(tracking object allocation call stack)。如果分配位置信息在堆转储中不可用，则必须将此标志设置为false，默认值为true</span><br><span class=\"line\">[-refs &lt;bool&gt;]:开关对象引用跟踪(tracking of references to objects)。默认值为true，默认情况下返回指针是指向其他特定对象的对象，如反向链接或输入引用（references or incoming references)，会统计计算堆中的所有对象</span><br><span class=\"line\">[-port&lt;port&gt;]:设置jhat Httpserver的端口号</span><br><span class=\"line\">[-exclude &lt;file&gt;]:指定对象查询是需要排除的数据成员列表文件(列出应从可访问对象查询中排除的数据成员文件)。例如，如果文件列列出了java.lang.String.value，那么当从某个特定对象Object o 计算可达到的对象列表时，引用路径涉及java.lang.String.value的都会被排除</span><br><span class=\"line\">[-baseline&lt;file&gt;]:指定一个基准堆转储(baseline heap dump)。在两个heap dumps中有相同objectId的对象会被标记为不是新的(maked as not being new)。其他对象被标记新的。在比较两个不用的堆转储时很有用</span><br><span class=\"line\">[-debug &lt;file&gt;] ：设置debug级别。0表示不输出调试信息。值越大则表示输出更详细的debug信息</span><br><span class=\"line\">[-version ]：启动后只显示版本信息就退出</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>第二个参数：堆转储文件</p>\n<ol>\n<li>要浏览的java二进制堆转储文件</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"六、-jstack\"><a href=\"#六、-jstack\" class=\"headerlink\" title=\"六、 jstack\"></a>六、 jstack</h3><ol>\n<li>作用：查看或者导出Java应用程序中线程堆栈信息</li>\n<li>线程快照是当前java虚拟机内每一条线程正在执行的方法堆栈集合，生成线程快照的目的是定位线程出现长时间停顿的原因，如线程死锁、死循环、长时间等待外部资源等。线程出现停顿的时候通过jstack来查看线程调用堆栈，就可以知道没有响应的线程到底在后台做了什么事情，或者等待什么资源。如果Java程序崩溃生成core文件，jstack工具可以用来获取core文件的java stack 和native stack的信息，从而可以轻松知道java程序是如果崩溃和在程序何处发生问题。另外，jstack工具还可以附属到正在运行的java程序中，看到当时运行java程序的javastack和native stack的信息</li>\n<li>命令格式：jstack [options] <pid></li>\n<li>参数解释<ol>\n<li>-F：当线程挂起，使用jstack -l pid请求不被响应时，强制输出线程堆栈</li>\n<li>-l：除堆栈外，显示关于锁的附加信息例如：ownable synchronizers</li>\n<li>-m：可以同时输出java以及c&#x2F;c++的堆栈信息</li>\n<li>演示：<ol>\n<li>CPU过高：<ul>\n<li>使用Process Explorer工具，找到CPU占用率高的进程id</li>\n<li>右击该进程，查看属性。在thread选项卡中，找到CPU占用率高的线程id</li>\n<li>把线程id转换成16禁止</li>\n<li>使用jstack -l pid 查看进程的线程快照</li>\n<li>在线程快照中指定的线程，并分析代码</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["jvm"],"tags":["Java"]},{"title":"tree命令的使用","url":"/2022/06/29/tree%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/","content":"<h3 id=\"一、参数详解\"><a href=\"#一、参数详解\" class=\"headerlink\" title=\"一、参数详解\"></a>一、参数详解</h3><ol>\n<li>-a 显示所有文件和目录。</li>\n<li>-A 使用ASNI绘图字符显示树状图而非以ASCII字符组合。</li>\n<li>-C 在文件和目录清单加上色彩，便于区分各种类型。</li>\n<li>-d 显示目录名称而非内容。</li>\n<li>-D 列出文件或目录的更改时间。</li>\n<li>-f 在每个文件或目录之前，显示完整的相对路径名称。</li>\n<li>-F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上”*”,”&#x2F;”,”&#x3D;”,”@”,”|”号。</li>\n<li>-g 列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。</li>\n<li>-i 不以阶梯状列出文件或目录名称。</li>\n<li>-I 不显示符合范本样式的文件或目录名称。</li>\n<li>-l 如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。</li>\n<li>-n 不在文件和目录清单加上色彩。</li>\n<li>-N 直接列出文件和目录名称，包括控制字符。</li>\n<li>-p 列出权限标示。</li>\n<li>-P 只显示符合范本样式的文件或目录名称。</li>\n<li>-q 用”?”号取代控制字符，列出文件和目录名称。</li>\n<li>-s 列出文件或目录大小。</li>\n<li>-t 用文件和目录的更改时间排序。</li>\n<li>-u 列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。</li>\n<li>-x 将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。</li>\n</ol>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["linux"],"tags":["linux"]},{"title":"validator中三种注解的区别","url":"/2022/05/03/validator%E4%B8%AD%E4%B8%89%E7%A7%8D%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%8C%BA%E5%88%AB/","content":"<h1 id=\"NotEmpty、-NotBlank、-NotNull三种注解的区别\"><a href=\"#NotEmpty、-NotBlank、-NotNull三种注解的区别\" class=\"headerlink\" title=\"@NotEmpty、@NotBlank、@NotNull三种注解的区别\"></a>@NotEmpty、@NotBlank、@NotNull三种注解的区别</h1><h3 id=\"一、-NotEmpty\"><a href=\"#一、-NotEmpty\" class=\"headerlink\" title=\"一、@NotEmpty\"></a>一、@NotEmpty</h3><ol>\n<li>用在集合类上面</li>\n<li>加了@NotEmpty的String类、Collection、Map、数组，是不能为null或者长度为0的(String Collection Map的isEmpty()方法)</li>\n</ol>\n<h3 id=\"二、-NotNull\"><a href=\"#二、-NotNull\" class=\"headerlink\" title=\"二、@NotNull\"></a>二、@NotNull</h3><ol>\n<li>不能为null，但可以为empty,没有Size的约束</li>\n</ol>\n<h3 id=\"三、-NotBlank\"><a href=\"#三、-NotBlank\" class=\"headerlink\" title=\"三、@NotBlank\"></a>三、@NotBlank</h3><ol>\n<li>只用于String,不能为null，而且调用trim()后，长度必须大于0</li>\n</ol>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["Java"],"tags":["注解"]},{"title":"常见的HTTP状态码","url":"/2022/05/14/%E5%B8%B8%E8%A7%81%E7%9A%84HTTP%E7%8A%B6%E6%80%81%E7%A0%81/","content":"<h1 id=\"常见的HTTP状态码\"><a href=\"#常见的HTTP状态码\" class=\"headerlink\" title=\"常见的HTTP状态码\"></a>常见的HTTP状态码</h1><h3 id=\"一、2开头-（请求成功）表示成功处理了请求的状态代码。\"><a href=\"#一、2开头-（请求成功）表示成功处理了请求的状态代码。\" class=\"headerlink\" title=\"一、2开头 （请求成功）表示成功处理了请求的状态代码。\"></a>一、2开头 （请求成功）表示成功处理了请求的状态代码。</h3><ol>\n<li>200  （成功） 服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。 </li>\n<li>201  （已创建） 请求成功并且服务器创建了新的资源。 </li>\n<li>202  （已接受） 服务器已接受请求，但尚未处理。 </li>\n<li>203  （非授权信息） 服务器已成功处理了请求，但返回的信息可能来自另一来源。 </li>\n<li>204  （无内容） 服务器成功处理了请求，但没有返回任何内容。 </li>\n<li>205  （重置内容） 服务器成功处理了请求，但没有返回任何内容。</li>\n<li>206  （部分内容） 服务器成功处理了部分 GET 请求。</li>\n</ol>\n<h3 id=\"二、3开头-（请求被重定向）表示要完成请求，需要进一步操作。-通常，这些状态代码用来重定向。\"><a href=\"#二、3开头-（请求被重定向）表示要完成请求，需要进一步操作。-通常，这些状态代码用来重定向。\" class=\"headerlink\" title=\"二、3开头 （请求被重定向）表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。\"></a>二、3开头 （请求被重定向）表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。</h3><ol>\n<li>300  （多种选择） 针对请求，服务器可执行多种操作。 服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。 </li>\n<li>301  （永久移动） 请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。</li>\n<li>302  （临时移动） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</li>\n<li>303  （查看其他位置） 请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。</li>\n<li>304  （未修改） 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。 </li>\n<li>305  （使用代理） 请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。 </li>\n<li>307  （临时重定向） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</li>\n</ol>\n<h3 id=\"三、4开头-（请求错误）这些状态代码表示请求可能出错，妨碍了服务器的处理。\"><a href=\"#三、4开头-（请求错误）这些状态代码表示请求可能出错，妨碍了服务器的处理。\" class=\"headerlink\" title=\"三、4开头 （请求错误）这些状态代码表示请求可能出错，妨碍了服务器的处理。\"></a>三、4开头 （请求错误）这些状态代码表示请求可能出错，妨碍了服务器的处理。</h3><ol>\n<li>400  （错误请求） 服务器不理解请求的语法。 </li>\n<li>401  （未授权） 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。 </li>\n<li>403  （禁止） 服务器拒绝请求。</li>\n<li>404  （未找到） 服务器找不到请求的网页。</li>\n<li>405  （方法禁用） 禁用请求中指定的方法。 </li>\n<li>406  （不接受） 无法使用请求的内容特性响应请求的网页。 </li>\n<li>407  （需要代理授权） 此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。</li>\n<li>408  （请求超时） 服务器等候请求时发生超时。 </li>\n<li>409  （冲突） 服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。 </li>\n<li>410  （已删除） 如果请求的资源已永久删除，服务器就会返回此响应。 </li>\n<li>411  （需要有效长度） 服务器不接受不含有效内容长度标头字段的请求。 </li>\n<li>412  （未满足前提条件） 服务器未满足请求者在请求中设置的其中一个前提条件。 </li>\n<li>413  （请求实体过大） 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。 </li>\n<li>414  （请求的 URI 过长） 请求的 URI（通常为网址）过长，服务器无法处理。 </li>\n<li>415  （不支持的媒体类型） 请求的格式不受请求页面的支持。 </li>\n<li>416  （请求范围不符合要求） 如果页面无法提供请求的范围，则服务器会返回此状态代码。 </li>\n<li>417  （未满足期望值） 服务器未满足”期望”请求标头字段的要求。</li>\n</ol>\n<h3 id=\"四、5开头（服务器错误）这些状态代码表示服务器在尝试处理请求时发生内部错误。-这些错误可能是服务器本身的错误，而不是请求出错。\"><a href=\"#四、5开头（服务器错误）这些状态代码表示服务器在尝试处理请求时发生内部错误。-这些错误可能是服务器本身的错误，而不是请求出错。\" class=\"headerlink\" title=\"四、5开头（服务器错误）这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。\"></a>四、5开头（服务器错误）这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</h3><ol>\n<li>500  （服务器内部错误） 服务器遇到错误，无法完成请求。 </li>\n<li>501  （尚未实施） 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。 </li>\n<li>502  （错误网关） 服务器作为网关或代理，从上游服务器收到无效响应。 </li>\n<li>503  （服务不可用） 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。 </li>\n<li>504  （网关超时） 服务器作为网关或代理，但是没有及时从上游服务器收到请求。 </li>\n<li>505  （HTTP 版本不受支持） 服务器不支持请求中所用的 HTTP 协议版本。</li>\n</ol>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["http"],"tags":["java"]},{"title":"ConditionalOn相关注解和Conditional以及Condition接口的使用","url":"/2022/06/30/ConditionalOn%E7%9B%B8%E5%85%B3%E6%B3%A8%E8%A7%A3%E5%92%8CConditional%E4%BB%A5%E5%8F%8ACondition%E6%8E%A5%E5%8F%A3%E7%9A%84%E4%BD%BF%E7%94%A8/","content":"<h3 id=\"一、概述\"><a href=\"#一、概述\" class=\"headerlink\" title=\"一、概述\"></a>一、概述</h3><ol>\n<li>@ConditionalOnBean：ConditionalOnBean是指spring容器中有某个bean时才装配。ConditionalOnMissingBean当spring容器中不存在某个bean时才会装配</li>\n<li>@ConditionalOnClass：ConditionalOnClass是指当classpath下有某个类时才装配。ConditionalOnMissingClass是指当classPath下没某个类才装配</li>\n<li>@ConditionalOnProperty：ConditionalOnProperty是值某和配置项为某个值时才装配，ConditionalOnMissingProperty是指当某个配置项不等于某个值时才装配</li>\n</ol>\n<h3 id=\"二、注解中属性值详解\"><a href=\"#二、注解中属性值详解\" class=\"headerlink\" title=\"二、注解中属性值详解\"></a>二、注解中属性值详解</h3><ol>\n<li><p>@ConditionalOnBean</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Conditional(OnBeanCondition.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> ConditionalOnBean &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The class types of beans that should be checked. The condition matches when beans</span></span><br><span class=\"line\"><span class=\"comment\">\t * of all classes specified are contained in the &#123;<span class=\"doctag\">@link</span> BeanFactory&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the class types of beans to check</span></span><br><span class=\"line\"><span class=\"comment\">\t *应该检查的 bean 的类类型。当指定的所有类的 bean 都包含在 BeanFactory 中时，条件匹配。返回：\t *要检查的 bean 的类类型</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tClass&lt;?&gt;[] value() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The class type names of beans that should be checked. The condition matches when</span></span><br><span class=\"line\"><span class=\"comment\">\t * beans of all classes specified are contained in the &#123;<span class=\"doctag\">@link</span> BeanFactory&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the class type names of beans to check</span></span><br><span class=\"line\"><span class=\"comment\">\t * 应检查的 bean 的类类型名称。当指定的所有类的 bean 都包含在 BeanFactory 中时，条件匹配。返\t * 回：要检查的 bean 的类类型名称</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tString[] type() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The annotation type decorating a bean that should be checked. The condition matches</span></span><br><span class=\"line\"><span class=\"comment\">\t * when all of the annotations specified are defined on beans in the</span></span><br><span class=\"line\"><span class=\"comment\">\t * &#123;<span class=\"doctag\">@link</span> BeanFactory&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the class-level annotation types to check</span></span><br><span class=\"line\"><span class=\"comment\">\t * 装饰应检查的 bean 的注释类型。当所有指定的注释都在 BeanFactory 中的 bean 上定义时，条件匹\t * 配。返回：要检查的类级别注释类型</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tClass&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">Annotation</span>&gt;[] annotation() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The names of beans to check. The condition matches when all of the bean names</span></span><br><span class=\"line\"><span class=\"comment\">\t * specified are contained in the &#123;<span class=\"doctag\">@link</span> BeanFactory&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the names of beans to check</span></span><br><span class=\"line\"><span class=\"comment\">\t * 要检查的 bean 的名称。当指定的所有 bean 名称都包含在 BeanFactory 中时，条件匹配。返回：要\t * 检查的 bean 的名称</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tString[] name() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Strategy to decide if the application context hierarchy (parent contexts) should be</span></span><br><span class=\"line\"><span class=\"comment\">\t * considered.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the search strategy</span></span><br><span class=\"line\"><span class=\"comment\">\t * 决定是否应考虑应用程序上下文层次结构（父上下文）的策略。返回：搜索策略</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tSearchStrategy <span class=\"title function_\">search</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> SearchStrategy.ALL;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Additional classes that may contain the specified bean types within their generic</span></span><br><span class=\"line\"><span class=\"comment\">\t * parameters. For example, an annotation declaring &#123;<span class=\"doctag\">@code</span> value=Name.class&#125; and</span></span><br><span class=\"line\"><span class=\"comment\">\t * &#123;<span class=\"doctag\">@code</span> parameterizedContainer=NameRegistration.class&#125; would detect both</span></span><br><span class=\"line\"><span class=\"comment\">\t * &#123;<span class=\"doctag\">@code</span> Name&#125; and &#123;<span class=\"doctag\">@code</span> NameRegistration&lt;Name&gt;&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the container types</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@since</span> 2.1.0</span></span><br><span class=\"line\"><span class=\"comment\">\t * 可能在其通用参数中包含指定 bean 类型的其他类。例如，声明 value=Name.class 和 \t \t\t  \t\t * parameterizedContainer=NameRegistration.class 的注释将同时检测 Name 和 \t\t \t\t\t      \t * NameRegistration 。返回：容器类型自：2.1.0</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span>  </span><br><span class=\"line\">\tClass&lt;?&gt;[] parameterizedContainer() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>@ConditionalOnClass</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target(&#123; ElementType.TYPE, ElementType.METHOD &#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Conditional(OnClassCondition.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> ConditionalOnClass &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The classes that must be present. Since this annotation is parsed by loading class</span></span><br><span class=\"line\"><span class=\"comment\">\t * bytecode, it is safe to specify classes here that may ultimately not be on the</span></span><br><span class=\"line\"><span class=\"comment\">\t * classpath, only if this annotation is directly on the affected component and</span></span><br><span class=\"line\"><span class=\"comment\">\t * &lt;b&gt;not&lt;/b&gt; if this annotation is used as a composed, meta-annotation. In order to</span></span><br><span class=\"line\"><span class=\"comment\">\t * use this annotation as a meta-annotation, only use the &#123;<span class=\"doctag\">@link</span> #name&#125; attribute.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the classes that must be present</span></span><br><span class=\"line\"><span class=\"comment\">\t *必须存在的类。因为这个注解是通过加载类字节码来解析的，所以在这里指定最终可能不在类路径上的类是安\t *全的，只有当这个注解直接在受影响的组件上而不是这个注解被用作组合的元注解时.为了将此注释用作元注\t *释，请仅使用 name 属性。返回：必须存在的类</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tClass&lt;?&gt;[] value() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The classes names that must be present.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the class names that must be present.</span></span><br><span class=\"line\"><span class=\"comment\">\t * 必须存在的类名称。返回： 必须存在的类名</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tString[] name() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>@ConditionalOnProperty</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Target(&#123; ElementType.TYPE, ElementType.METHOD &#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Conditional(OnPropertyCondition.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> ConditionalOnProperty &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Alias for &#123;<span class=\"doctag\">@link</span> #name()&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the names</span></span><br><span class=\"line\"><span class=\"comment\">\t * name 别名</span></span><br><span class=\"line\"><span class=\"comment\">\t * 数组，获取对应property名称的值，与name不可同时使用</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tString[] value() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * A prefix that should be applied to each property. The prefix automatically ends</span></span><br><span class=\"line\"><span class=\"comment\">\t * with a dot if not specified. A valid prefix is defined by one or more words</span></span><br><span class=\"line\"><span class=\"comment\">\t * separated with dots (e.g. &#123;<span class=\"doctag\">@code</span> &quot;acme.system.feature&quot;&#125;).</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the prefix</span></span><br><span class=\"line\"><span class=\"comment\">\t * 配置属性名称的前缀，</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tString <span class=\"title function_\">prefix</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The name of the properties to test. If a prefix has been defined, it is applied to</span></span><br><span class=\"line\"><span class=\"comment\">\t * compute the full key of each property. For instance if the prefix is</span></span><br><span class=\"line\"><span class=\"comment\">\t * &#123;<span class=\"doctag\">@code</span> app.config&#125; and one value is &#123;<span class=\"doctag\">@code</span> my-value&#125;, the full key would be</span></span><br><span class=\"line\"><span class=\"comment\">\t * &#123;<span class=\"doctag\">@code</span> app.config.my-value&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t * Use the dashed notation to specify each property, that is all lower case with a &quot;-&quot;</span></span><br><span class=\"line\"><span class=\"comment\">\t * to separate words (e.g. &#123;<span class=\"doctag\">@code</span> my-long-property&#125;).</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the names</span></span><br><span class=\"line\"><span class=\"comment\">\t * 数组、配置属性完整名称，或者部分名称</span></span><br><span class=\"line\"><span class=\"comment\">\t * 可与prefix组合使用，组成完整的配置属性值名称，与value不可同时使用</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tString[] name() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * The string representation of the expected value for the properties. If not</span></span><br><span class=\"line\"><span class=\"comment\">\t * specified, the property must &lt;strong&gt;not&lt;/strong&gt; be equal to &#123;<span class=\"doctag\">@code</span> false&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> the expected value</span></span><br><span class=\"line\"><span class=\"comment\">\t * 可与name组合使用，比较获取到的属性值与havingValue给定得值是否相同，相同才会加载</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\tString <span class=\"title function_\">havingValue</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Specify if the condition should match if the property is not set. Defaults to</span></span><br><span class=\"line\"><span class=\"comment\">\t * &#123;<span class=\"doctag\">@code</span> false&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> if the condition should match if the property is missing</span></span><br><span class=\"line\"><span class=\"comment\">\t * 缺少该配置属性时是否可以加载，如果为true，没有该配置属性时也会正常加载，反之则不会生效</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"type\">boolean</span> <span class=\"title function_\">matchIfMissing</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"三、代码示例\"><a href=\"#三、代码示例\" class=\"headerlink\" title=\"三、代码示例\"></a>三、代码示例</h3><ol>\n<li><p>不加任何注解的时候，正常启动spring容器</p>\n<ol>\n<li><p>配置类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.yxf.springboot.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringBootConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> top.yxf.springboot.pojo.Person;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.time.Period;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootConfiguration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Person <span class=\"title function_\">person1</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;创建person1&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Person <span class=\"title function_\">person2</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;创建person2&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Person <span class=\"title function_\">person3</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;创建person3&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.yxf.springboot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringbootDemoApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ConfigurableApplicationContext</span> <span class=\"variable\">run</span> <span class=\"operator\">=</span> SpringApplication.run(SpringbootDemoApplication.class, args);</span><br><span class=\"line\">        System.out.println(run.getBeansOfType(Person.class));</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">&#123;person1=top.yxf.springboot.pojo.Person@28cb9120, person2=top.yxf.springboot.pojo.Person@3b152928, person3=top.yxf.springboot.pojo.Person@56781d96&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>当分别加上注解时</p>\n<ol>\n<li><p>配置类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.yxf.springboot.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringBootConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnBean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnClass;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> top.yxf.springboot.pojo.Person;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.time.Period;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootConfiguration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@ConditionalOnBean(name = &quot;user&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Person <span class=\"title function_\">person1</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;创建person1&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@ConditionalOnClass(name = &quot;user&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Person <span class=\"title function_\">person2</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;创建person2&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@ConditionalOnProperty(name = &quot;name&quot;,havingValue = &quot;yxf&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Person <span class=\"title function_\">person3</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;创建person3&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.yxf.springboot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringbootDemoApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ConfigurableApplicationContext</span> <span class=\"variable\">run</span> <span class=\"operator\">=</span> SpringApplication.run(SpringbootDemoApplication.class, args);</span><br><span class=\"line\">        System.out.println(run.getBeansOfType(Person.class));</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">&#123;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>结果没有任何person被装配，因为没有user的bean被装配</code></p>\n</li>\n<li><p>为spring容器中装配一个User，</p>\n<ol>\n<li><p>User</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.yxf.springboot.pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component(value = &quot;user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>由于spring容器托管了User类，名字且为user，所以只会输出<code>&#123;person1=top.yxf.springboot.pojo.Person@7c2a69b4&#125;</code></p>\n</li>\n</ol>\n</li>\n<li><p>在application.properties添加name&#x3D;yxf参数，person3也被装配了</p>\n</li>\n<li><p>由于classpath下没有user的bean，所有person2没有被装配。可以通过ClassPathXmlApplicationContext加载装配user</p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"四、其它类似注解\"><a href=\"#四、其它类似注解\" class=\"headerlink\" title=\"四、其它类似注解\"></a>四、其它类似注解</h3><ol>\n<li>@ConditionalOnJava：指定java版本装配bean</li>\n<li>@ConditionalOnExpression：符合指定表达式注解</li>\n<li>@ConditionalOnSingleCandidate：只有指定类已存在于 BeanFactory 中，并且可以确定单个候选项才会匹配成功。BeanFactory 存在多个 bean 实例，但是有一个 primary 候选项被指定(通常在类上使用 @Primary 注解)，也会匹配成功。实质上，如果自动连接具有定义类型的 bean 匹配就会成功</li>\n<li>@ConditionalOnResource：我们要加载的 bean 依赖指定资源是否存在于 classpath 中，那么我们就可以使用这个注解</li>\n<li>@ConditionalOnJndi：指定的资源通过 JNDI 加载后才加载 bean</li>\n<li>@ConditionalOnWebApplication 和 @ConditionalOnNotWebApplication：只有运行在 web 应用里才会加载这个 bean</li>\n<li>@ConditionalOnCloudPlatform：只有运行在指定的云平台上才加载指定的 bean，CloudPlatform 是 org.springframework.boot.cloud 下一个 enum 类型的类</li>\n</ol>\n<h3 id=\"五、-Conditional和Condition接口\"><a href=\"#五、-Conditional和Condition接口\" class=\"headerlink\" title=\"五、@Conditional和Condition接口\"></a>五、@Conditional和Condition接口</h3><p>除了以上那些注解，spring还提供了扩展，利用@Conditional和Condition注解自定义扩展功能。<code>一般情况下Condition接口和@Conditional注解要配合使用</code></p>\n<ol>\n<li><p>首先我们需要实现Condition接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.yxf.springboot.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Condition;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.ConditionContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.core.type.AnnotatedTypeMetadata;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 自定义一个 MyCondition</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@author</span> xs.wu</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@className</span> MyCondition</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@date</span> 2022/6/30 17:26</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyCondition</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Condition</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">matches</span><span class=\"params\">(ConditionContext context, AnnotatedTypeMetadata metadata)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> context.getEnvironment().getProperty(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">      \t<span class=\"comment\">// 加载所以beanDefinition的名字</span></span><br><span class=\"line\">        String[] beanDefinitionNames = context.getRegistry().getBeanDefinitionNames();</span><br><span class=\"line\">        List&lt;String&gt; strings = Arrays.asList(beanDefinitionNames);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (name.equals(<span class=\"string\">&quot;yxf&quot;</span>)))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后再装配一个person4</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"meta\">@Conditional(MyCondition.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Person <span class=\"title function_\">person4</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动spring容器。name&#x3D;yxf为true时，则会装配person4</p>\n</li>\n</ol>\n<p><code>最后不多说，凡事自己多试试，多看看、多想想、多敲敲。发现也就那样</code></p>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["Java"],"tags":["spring"]},{"title":"Leetcode第871题","url":"/2022/07/02/Leetcode%E7%AC%AC871%E9%A2%98/","content":"<h3 id=\"一、题目描述：\"><a href=\"#一、题目描述：\" class=\"headerlink\" title=\"一、题目描述：\"></a>一、题目描述：</h3><h6 id=\"一、题目：最低加油次数\"><a href=\"#一、题目：最低加油次数\" class=\"headerlink\" title=\"一、题目：最低加油次数\"></a>一、题目：最低加油次数</h6><p>汽车从起点出发驶向目的地，该目的地位于出发位置东面 target 英里处。</p>\n<p>沿途有加油站，每个 station[i] 代表一个加油站，它位于出发位置东面 station[i][0]英里处，并且有 station[i][1] 升汽油。</p>\n<p>假设汽车油箱的容量是无限的，其中最初有 startFuel 升燃料。它每行驶 1 英里就会用掉 1 升汽油。</p>\n<p>当汽车到达加油站时，它可能停下来加油，将所有汽油从加油站转移到汽车中。</p>\n<p>为了到达目的地，汽车所必要的最低加油次数是多少？如果无法到达目的地，则返回 -1 。</p>\n<p>注意：如果汽车到达加油站时剩余燃料为 0，它仍然可以在那里加油。如果汽车到达目的地时剩余燃料为 0，仍然认为它已经到达目的地。</p>\n<p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode.cn/problems/minimum-number-of-refueling-stops\">https://leetcode.cn/problems/minimum-number-of-refueling-stops</a></p>\n<h6 id=\"二、题解\"><a href=\"#二、题解\" class=\"headerlink\" title=\"二、题解\"></a>二、题解</h6><ul>\n<li><p>解法：贪心+优先队列</p>\n</li>\n<li><p>参数详解：</p>\n<ul>\n<li>location：记录当前行驶多少英里</li>\n<li>surplus：剩余多少油</li>\n<li>res： 最终结果</li>\n</ul>\n</li>\n<li><p>思路：</p>\n<ol>\n<li>只有当location大于或者等于target时标识结束，相反，表示没有到达目标位置，需要继续向前。</li>\n<li>题目表明需要最低加油次数。此时我们只要将小于当前行驶的英里数的油量都加到队列中，每次取出最大的加油站进行加油，直到满足1才结束。</li>\n<li>这样可以确保最低加油次数。</li>\n</ol>\n</li>\n<li><p>代码示例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">minRefuelStops</span><span class=\"params\">(<span class=\"type\">int</span> target, <span class=\"type\">int</span> startFuel, <span class=\"type\">int</span>[][] stations)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  PriorityQueue&lt;Integer&gt; queue = <span class=\"keyword\">new</span> <span class=\"title class_\">PriorityQueue</span>&lt;&gt;((a,b) -&gt; b - a);</span><br><span class=\"line\">  <span class=\"comment\">// 记录行驶的英里数</span></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">location</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 还有多少升油</span></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">surplus</span> <span class=\"operator\">=</span> startFuel;</span><br><span class=\"line\">  <span class=\"comment\">// 站点数</span></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">len</span> <span class=\"operator\">=</span> stations.length;</span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">idx</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (location &lt; target) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (surplus == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!queue.isEmpty() &amp;&amp; ++res &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        surplus = queue.poll();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        res = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location += surplus;</span><br><span class=\"line\"></span><br><span class=\"line\">    surplus = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (idx &lt; len &amp;&amp; stations[idx][<span class=\"number\">0</span>] &lt;= location) &#123;</span><br><span class=\"line\">      queue.add(stations[idx++][<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">  System.out.println(<span class=\"keyword\">new</span> <span class=\"title class_\">Leetcode871</span>().minRefuelStops(<span class=\"number\">100</span>, <span class=\"number\">10</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[][]&#123;&#123;<span class=\"number\">10</span>, <span class=\"number\">20</span>&#125;, &#123;<span class=\"number\">10</span>, <span class=\"number\">30</span>&#125;&#125;));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code>\n  </p>\n","categories":["数据结构与算法"],"tags":["leetcode"]},{"title":"Leetcode第1200题","url":"/2022/07/05/Leetcode%E7%AC%AC1200%E9%A2%98/","content":"<h3 id=\"一、题目描述：\"><a href=\"#一、题目描述：\" class=\"headerlink\" title=\"一、题目描述：\"></a>一、题目描述：</h3><h6 id=\"一、题目：最小绝对差（simple）\"><a href=\"#一、题目：最小绝对差（simple）\" class=\"headerlink\" title=\"一、题目：最小绝对差（simple）\"></a>一、题目：最小绝对差（simple）</h6><p>难度简单113收藏分享切换为英文接收动态反馈</p>\n<p>给你个整数数组 <code>arr</code>，其中每个元素都 <strong>不相同</strong>。</p>\n<p>请你找到所有具有最小绝对差的元素对，并且按升序的顺序返回。</p>\n<p><strong>示例 1：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：arr = [4,2,1,3]</span><br><span class=\"line\">输出：[[1,2],[2,3],[3,4]]</span><br></pre></td></tr></table></figure>\n\n<p><strong>示例 2：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：arr = [1,3,6,10,15]</span><br><span class=\"line\">输出：[[1,3]]</span><br></pre></td></tr></table></figure>\n\n<p><strong>示例 3：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：arr = [3,8,-10,23,19,-4,-14,27]</span><br><span class=\"line\">输出：[[-14,-10],[19,23],[23,27]]</span><br></pre></td></tr></table></figure>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>2 &lt;= arr.length &lt;= 10^5</code></li>\n<li><code>-10^6 &lt;= arr[i] &lt;= 10^6</code></li>\n</ul>\n<p>来源：力扣（LeetCode）</p>\n<p>链接：<a href=\"https://leetcode.cn/problems/minimum-absolute-difference/\">https://leetcode.cn/problems/minimum-absolute-difference/</a></p>\n<h6 id=\"二、题解\"><a href=\"#二、题解\" class=\"headerlink\" title=\"二、题解\"></a>二、题解</h6><ul>\n<li><p>解法：常规</p>\n</li>\n<li><p>参数：</p>\n<ul>\n<li>min：记录每次相减的最小值</li>\n</ul>\n</li>\n<li><p>思路：</p>\n<ol>\n<li>由题可知，相邻的两个元素之间必定存在最小值。所以我们只需要对数组进行排序，排序完成后，初始假定第一个元素和第二个元素相减记录为<code>min</code></li>\n</ol>\n</li>\n<li><p>代码示例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">public</span> List&lt;List&lt;Integer&gt;&gt; <span class=\"title function_\">minimumAbsDifference</span><span class=\"params\">(<span class=\"type\">int</span>[] arr)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 对集合排序</span></span><br><span class=\"line\">   Arrays.sort(arr);</span><br><span class=\"line\">   <span class=\"type\">int</span> <span class=\"variable\">min</span> <span class=\"operator\">=</span> arr[<span class=\"number\">1</span>] - arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">   <span class=\"comment\">// 结果集合</span></span><br><span class=\"line\">   List&lt;List&lt;Integer&gt;&gt; res = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">     <span class=\"type\">int</span> <span class=\"variable\">curVal</span> <span class=\"operator\">=</span> arr[i + <span class=\"number\">1</span>] - arr[i];</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (curVal &lt; min) &#123;</span><br><span class=\"line\">       <span class=\"comment\">// 清空之前集合中的值</span></span><br><span class=\"line\">       res.clear();</span><br><span class=\"line\">       min = curVal;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (curVal == min) &#123;</span><br><span class=\"line\">       List&lt;Integer&gt; resultArr = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">       resultArr.add(arr[i]);</span><br><span class=\"line\">       resultArr.add(arr[i + <span class=\"number\">1</span>]);</span><br><span class=\"line\">       res.add(resultArr);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">  System.out.println(<span class=\"keyword\">new</span> <span class=\"title class_\">Leetcode1200</span>().minimumAbsDifference(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>&#125;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\"><span class=\"comment\">// [[1, 2], [2, 3], [3, 4]]</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code>\n  </p>\n","categories":["数据结构与算法"],"tags":["leetcode"]},{"title":"递归遍历二叉树","url":"/2022/07/07/%E9%80%92%E5%BD%92%E9%81%8D%E5%8E%86%E4%BA%8C%E5%8F%89%E6%A0%91/","content":"<h1 id=\"递归遍历二叉树\"><a href=\"#递归遍历二叉树\" class=\"headerlink\" title=\"递归遍历二叉树\"></a>递归遍历二叉树</h1><h3 id=\"一、递归三要素\"><a href=\"#一、递归三要素\" class=\"headerlink\" title=\"一、递归三要素\"></a>一、递归三要素</h3><ol>\n<li>确定递归函数的终止条件</li>\n<li>确定递归函数的参数和返回值</li>\n<li>确定单层递归的逻辑</li>\n</ol>\n<h3 id=\"二、递归优缺点\"><a href=\"#二、递归优缺点\" class=\"headerlink\" title=\"二、递归优缺点\"></a>二、递归优缺点</h3><ol>\n<li>优点<ul>\n<li>代码简洁</li>\n<li>易理解</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>效率低</li>\n<li>递归太深，耗内存且容易栈溢出</li>\n</ul>\n</li>\n</ol>\n<p><code>进入主题，使用递归遍历二叉树</code></p>\n<h3 id=\"三、递归遍历二叉树\"><a href=\"#三、递归遍历二叉树\" class=\"headerlink\" title=\"三、递归遍历二叉树\"></a>三、递归遍历二叉树</h3><ol>\n<li><p>二叉树结构</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TreeNode</span> &#123;</span><br><span class=\"line\">  TreeNode left;</span><br><span class=\"line\">  TreeNode right;</span><br><span class=\"line\">  <span class=\"type\">int</span> val;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">TreeNode</span><span class=\"params\">(<span class=\"type\">int</span> val)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.val = val;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">TreeNode</span><span class=\"params\">(<span class=\"type\">int</span> val, TreeNode left,TreeNode right)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.left = left;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.val = val;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.right = right;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>前序遍历</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">preorder</span><span class=\"params\">(TreeNode root, List&lt;Integer&gt; result)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  result.add(root.val);</span><br><span class=\"line\">  preorder(root.left, result);</span><br><span class=\"line\">  preorder(root.right, result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>中序遍历</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">inorder</span><span class=\"params\">(TreeNode root, List&lt;Integer&gt; res)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  inorder(root.left, res);</span><br><span class=\"line\">  res.add(root.val);</span><br><span class=\"line\">  inorder(root.right, res);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>后序遍历</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">postorder</span><span class=\"params\">(TreeNode root, List&lt;Integer&gt; res)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  postorder(root.left, res);</span><br><span class=\"line\">  postorder(root.right, res);</span><br><span class=\"line\">  res.add(root.val);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">TreeNode</span> <span class=\"variable\">treeNode</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(<span class=\"number\">10</span>,<span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(<span class=\"number\">6</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(<span class=\"number\">5</span>), <span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(<span class=\"number\">7</span>)), <span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(<span class=\"number\">11</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(<span class=\"number\">9</span>), <span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(<span class=\"number\">12</span>)));</span><br><span class=\"line\">  List&lt;Integer&gt; res = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">  System.out.println(<span class=\"string\">&quot;=====================前序遍历===================&quot;</span>);</span><br><span class=\"line\">  Preorder.preorder(treeNode, res);</span><br><span class=\"line\">  res.forEach(System.out::print);</span><br><span class=\"line\">  System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">  res.clear();</span><br><span class=\"line\">  System.out.println(<span class=\"string\">&quot;=====================中序遍历===================&quot;</span>);</span><br><span class=\"line\">  InorderTraversal.inorder(treeNode, res);</span><br><span class=\"line\">  res.forEach(System.out::print);</span><br><span class=\"line\"></span><br><span class=\"line\">  res.clear();</span><br><span class=\"line\">  System.out.println(<span class=\"string\">&quot;=====================后序遍历===================&quot;</span>);</span><br><span class=\"line\">  PostorderTraversal.postorder(treeNode, res);</span><br><span class=\"line\">  res.forEach(System.out::print);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\">=====================前序遍历===================</span><br><span class=\"line\"><span class=\"number\">1065711912</span></span><br><span class=\"line\">=====================中序遍历===================</span><br><span class=\"line\"><span class=\"number\">5671091112</span></span><br><span class=\"line\">=====================后序遍历===================</span><br><span class=\"line\"><span class=\"number\">5769121110</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["数据结构与算法"],"tags":["二叉树"]},{"title":"mysql1093错误解决方法","url":"/2022/07/28/mysql1093%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/","content":"<h1 id=\"mysql-出现You-can’t-specify-target-table-for-update-in-FROM-clause错误的解决方法\"><a href=\"#mysql-出现You-can’t-specify-target-table-for-update-in-FROM-clause错误的解决方法\" class=\"headerlink\" title=\"mysql 出现You can’t specify target table for update in FROM clause错误的解决方法\"></a>mysql 出现You can’t specify target table for update in FROM clause错误的解决方法</h1><h3 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h3><p>在leetCode上练习sql报错提示<code>1093 - You can&#39;t specify target table &#39;Person&#39; for update in FROM clause</code>,错误的意思是不能在同一个sql语句中，先select同一个表的某些值，然后再update这个表。下面leetCode相关题目</p>\n<h4 id=\"196-删除重复的电子邮箱\"><a href=\"#196-删除重复的电子邮箱\" class=\"headerlink\" title=\"196. 删除重复的电子邮箱\"></a><a href=\"https://leetcode.cn/problems/delete-duplicate-emails/\">196. 删除重复的电子邮箱</a></h4><p>难度简单555</p>\n<p>SQL架构</p>\n<p>表: <code>Person</code></p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">+-------------+---------+</span><br><span class=\"line\">| Column Name | Type    |</span><br><span class=\"line\">+-------------+---------+</span><br><span class=\"line\">| id          | int     |</span><br><span class=\"line\">| email       | varchar |</span><br><span class=\"line\">+-------------+---------+</span><br><span class=\"line\">id是该表的主键列。</span><br><span class=\"line\">该表的每一行包含一封电子邮件。电子邮件将不包含大写字母。</span><br></pre></td></tr></table></figure>\n\n<p>编写一个 SQL <strong>删除语句</strong>来 <strong>删除</strong> 所有重复的电子邮件，只保留一个id最小的唯一电子邮件。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。 （<strong>注意</strong>： 仅需要写删除语句，将自动对剩余结果进行查询）</p>\n<p>查询结果格式如下所示。 </p>\n<p><strong>示例 1:</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入: </span><br><span class=\"line\">Person 表:</span><br><span class=\"line\">+----+------------------+</span><br><span class=\"line\">| id | email            |</span><br><span class=\"line\">+----+------------------+</span><br><span class=\"line\">| 1  | john@example.com |</span><br><span class=\"line\">| 2  | bob@example.com  |</span><br><span class=\"line\">| 3  | john@example.com |</span><br><span class=\"line\">+----+------------------+</span><br><span class=\"line\">输出: </span><br><span class=\"line\">+----+------------------+</span><br><span class=\"line\">| id | email            |</span><br><span class=\"line\">+----+------------------+</span><br><span class=\"line\">| 1  | john@example.com |</span><br><span class=\"line\">| 2  | bob@example.com  |</span><br><span class=\"line\">+----+------------------+</span><br><span class=\"line\">解释: john@example.com重复两次。我们保留最小的Id = </span><br></pre></td></tr></table></figure>\n\n<p>我最初的解法如下（会出现1093错误）：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">from</span> Person <span class=\"keyword\">where</span> id <span class=\"keyword\">in</span> (</span><br><span class=\"line\">\t\t<span class=\"keyword\">SELECT</span> <span class=\"built_in\">max</span>(t.id) <span class=\"keyword\">from</span> Person t <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> t.email <span class=\"keyword\">having</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>) <span class=\"operator\">&gt;</span> <span class=\"number\">1</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、出现原因\"><a href=\"#二、出现原因\" class=\"headerlink\" title=\"二、出现原因\"></a>二、出现原因</h3><p>因为在同一个sql语句中，先select出Person表中每个用户消息的最小id值，然后再更新Person表，就会出现<code>1093 - You can&#39;t specify target table &#39;Person&#39; for update in FROM clause</code></p>\n<h3 id=\"三、解决方法\"><a href=\"#三、解决方法\" class=\"headerlink\" title=\"三、解决方法\"></a>三、解决方法</h3><ol>\n<li><p>在mysql官网也明确了这一点，链接是：<a href=\"https://dev.mysql.com/doc/refman/5.6/en/update.html\">https://dev.mysql.com/doc/refman/5.6/en/update.html</a> （tip：搜索1093）</p>\n</li>\n<li><p>select的结果再通过一个中间表select多一次，就可以避免这个错误</p>\n</li>\n<li><p>最终sql：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">from</span> Person <span class=\"keyword\">where</span> id <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> (</span><br><span class=\"line\">\t\t<span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">SELECT</span> <span class=\"built_in\">min</span>(t.id) <span class=\"keyword\">from</span> Person t <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> t.email) p</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["database"],"tags":["mysql"]},{"title":"二叉树层序遍历","url":"/2022/07/25/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/","content":"<h1 id=\"二叉树层序遍历\"><a href=\"#二叉树层序遍历\" class=\"headerlink\" title=\"二叉树层序遍历\"></a>二叉树层序遍历</h1><h3 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h3><p>在之前我们实现了二叉树的前中后序遍历，现在我们来介绍一下如何实现二叉树的层序遍历</p>\n<h3 id=\"二、实现方法\"><a href=\"#二、实现方法\" class=\"headerlink\" title=\"二、实现方法\"></a>二、实现方法</h3><p>首先，我们需要实现一个二叉树的层序遍历，需要借助一个辅助数据结构，那就是队列，队列特点是先进先出。</p>\n<h3 id=\"三、代码实现\"><a href=\"#三、代码实现\" class=\"headerlink\" title=\"三、代码实现\"></a>三、代码实现</h3><p>首先定义一个基础类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TreeNode</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> val;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TreeNode left;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TreeNode right;</span><br><span class=\"line\"></span><br><span class=\"line\">    TreeNode() &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">TreeNode</span><span class=\"params\">(<span class=\"type\">int</span> val)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.val = val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">TreeNode</span><span class=\"params\">(<span class=\"type\">int</span> val, TreeNode left, TreeNode right)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.val = val;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.left = left;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.right = right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BinaryTreeLevelOrderTraversal</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 在 Queue 中 add() 和 offer() 有什么区别？</span></span><br><span class=\"line\"><span class=\"comment\">     *  1、Queue 中 add() 和 offer()都是用来向队列添加一个元素。</span></span><br><span class=\"line\"><span class=\"comment\">     *  2、在容量已满的情况下，add() 方法会抛出IllegalStateException异常，offer() 方法只会返回 false 。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> List&lt;List&lt;Integer&gt;&gt; fun01List = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> List&lt;List&lt;Integer&gt;&gt; fun02List = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">TreeNode</span> <span class=\"variable\">root</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(<span class=\"number\">1</span>,<span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(<span class=\"number\">2</span>,<span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(<span class=\"number\">4</span>), <span class=\"literal\">null</span>), <span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(<span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">BinaryTreeLevelOrderTraversal</span>().fun01(root, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">BinaryTreeLevelOrderTraversal</span>().fun02(root);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(fun01List);</span><br><span class=\"line\">        System.out.println(fun02List);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * BFS 借助队列</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> root 当前树根节点</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">fun02</span><span class=\"params\">(TreeNode root)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Queue&lt;TreeNode&gt; queue = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;&gt;();</span><br><span class=\"line\">        queue.add(root);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!queue.isEmpty()) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// add == offer</span></span><br><span class=\"line\">            List&lt;Integer&gt; item = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">len</span> <span class=\"operator\">=</span> queue.size();</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (len &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"type\">TreeNode</span> <span class=\"variable\">poll</span> <span class=\"operator\">=</span> queue.poll();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (poll.left != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    queue.add(poll.left);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (poll.right != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    queue.add(poll.right);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                item.add(poll.val);</span><br><span class=\"line\">                len --;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            fun02List.add(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * DFS--递归方式</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> root 树根节点</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> deep 当前层级</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">fun01</span><span class=\"params\">(TreeNode root, <span class=\"type\">int</span> deep)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        deep++;</span><br><span class=\"line\">        <span class=\"comment\">// 判断当前层级</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (fun01List.size() &lt; deep) &#123;</span><br><span class=\"line\">            List&lt;Integer&gt; item = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">            fun01List.add(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        fun01List.get(deep - <span class=\"number\">1</span>).add(root.val);</span><br><span class=\"line\">        fun01(root.left, deep);</span><br><span class=\"line\">        fun01(root.right, deep);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"四、解决leetCode二叉树题目\"><a href=\"#四、解决leetCode二叉树题目\" class=\"headerlink\" title=\"四、解决leetCode二叉树题目\"></a>四、解决leetCode二叉树题目</h3><h6 id=\"一、题目：107-二叉树的层序遍历-II\"><a href=\"#一、题目：107-二叉树的层序遍历-II\" class=\"headerlink\" title=\"一、题目：107. 二叉树的层序遍历 II\"></a>一、题目：<a href=\"https://leetcode.cn/problems/binary-tree-level-order-traversal-ii/\">107. 二叉树的层序遍历 II</a></h6><p>难度中等599</p>\n<p>给你二叉树的根节点 <code>root</code> ，返回其节点值 <strong>自底向上的层序遍历</strong> 。 （即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历）</p>\n<p><strong>示例 1：</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\" alt=\"img\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：root = [3,9,20,null,null,15,7]</span><br><span class=\"line\">输出：[[15,7],[9,20],[3]]</span><br></pre></td></tr></table></figure>\n\n<p><strong>示例 2：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：root = [1]</span><br><span class=\"line\">输出：[[1]]</span><br></pre></td></tr></table></figure>\n\n<p><strong>示例 3：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入：root = []</span><br><span class=\"line\">输出：[]</span><br></pre></td></tr></table></figure>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li>树中节点数目在范围 <code>[0, 2000]</code> 内</li>\n<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n<p>来源：<a href=\"https://leetcode.cn/problems/binary-tree-level-order-traversal-ii/\">力扣</a></p>\n<h6 id=\"二、解法\"><a href=\"#二、解法\" class=\"headerlink\" title=\"二、解法\"></a>二、解法</h6><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;List&lt;Integer&gt;&gt; <span class=\"title function_\">levelOrderBottom</span><span class=\"params\">(TreeNode root)</span> &#123;</span><br><span class=\"line\">        Queue&lt;TreeNode&gt; queue = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>();</span><br><span class=\"line\">        List&lt;List&lt;Integer&gt;&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        queue.add(root);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!queue.isEmpty()) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            List&lt;Integer&gt; list1 = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">len</span> <span class=\"operator\">=</span> queue.size();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">                <span class=\"type\">TreeNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> queue.poll();</span><br><span class=\"line\">                list1.add(node.val);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (node.left != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    queue.add(node.left);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (node.right != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    queue.add(node.right);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            list.add(list1);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        List&lt;List&lt;Integer&gt;&gt; res = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> list.size()- <span class=\"number\">1</span>; i &gt;=<span class=\"number\">0</span> ; i--) &#123;</span><br><span class=\"line\">            res.add(list.get(i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["数据结构与算法"],"tags":["算法"]},{"title":"SpringBoot整合nacos+openFeign+jpa","url":"/2022/07/31/SpringBoot%E6%95%B4%E5%90%88nacos-openFeign-jpa/","content":"<h1 id=\"SpringBoot整合nacos-openFeign-jpa\"><a href=\"#SpringBoot整合nacos-openFeign-jpa\" class=\"headerlink\" title=\"SpringBoot整合nacos+openFeign+jpa\"></a>SpringBoot整合nacos+openFeign+jpa</h1><h3 id=\"一、环境搭建\"><a href=\"#一、环境搭建\" class=\"headerlink\" title=\"一、环境搭建\"></a>一、环境搭建</h3><ol>\n<li>SpringBoot版本2.4。2</li>\n<li>nacos版本2021.1</li>\n<li>openfeign版本3.1.3</li>\n<li>jpa版本2.3.12.RELEASE</li>\n<li>maven版本3.8.x</li>\n</ol>\n<h3 id=\"二、nacos安装\"><a href=\"#二、nacos安装\" class=\"headerlink\" title=\"二、nacos安装\"></a>二、nacos安装</h3><p>docker安装的：</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker pull nacos/nacos-server</span><br></pre></td></tr></table></figure>\n\n<p>查询docker是否拉取成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker images</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/image-20220731095731754.png\" alt=\"image-20220731095731754\"></p>\n<p>nacos容器启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8848:8848 -e MODE=standalone \\</span><br><span class=\"line\">-v /mydata/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties \\</span><br><span class=\"line\">-v /mydata/nacos/logs:/home/nacos/logs \\</span><br><span class=\"line\">--restart always \\</span><br><span class=\"line\">--name nacos nacos/nacos-server</span><br></pre></td></tr></table></figure>\n\n<p>查询是否启动成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/image-20220731095427220.png\" alt=\"image-20220731095427220\"></p>\n<p>如果是通过载阿里云、腾讯元或其他购买服务器，记得开放nacos端口8848，以下是具体步骤</p>\n<ul>\n<li><p>查看指定端口是否对外开开放</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">firewall-cmd --query-port=8848/tcp</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">返回<span class=\"built_in\">yes</span>/no表示端口是否开放</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开放端口命令步骤</p>\n<ul>\n<li><p>先打开防火墙</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl start firewalld</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加指定需要开放的端口</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">firewall-cmd --add-port=8848/tcp --permanent</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新载入添加的端口</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查询指定端口是否开放成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">firewall-cmd --query-port=8848/tcp</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭防火墙</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>测试是否开放成功，访问http:&#x2F;&#x2F;{ip}:8848&#x2F;nacos,密码和账号都是nacos</p>\n<p><img src=\"/../images/image-20220731101355350.png\" alt=\"image-20220731101355350\"></p>\n</li>\n</ul>\n<h3 id=\"三、maven安装\"><a href=\"#三、maven安装\" class=\"headerlink\" title=\"三、maven安装\"></a>三、maven安装</h3><ol>\n<li><p>点击<a href=\"https://maven.apache.org/\">maven</a></p>\n<p><img src=\"/../images/image-20220731100105640.png\" alt=\"image-20220731100105640\"></p>\n</li>\n<li><p>配置环境变量</p>\n<ul>\n<li><p>打开.zshrc</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">切换到根目录</span></span><br><span class=\"line\">cd ～</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开.zshrc文件</span></span><br><span class=\"line\">open -e .zshrc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将下面添加到.zshrc文件中去</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">export MAVEN_HOME=/Users/mac/Library/ApacheMaven</span><br><span class=\"line\">export PATH=$MAVEN_HOME/bin:$PATH</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在终端执行生效命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">source ~/.zshrc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>检查是否安装成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">mvn -v</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/image-20220731100716956.png\" alt=\"image-20220731100716956\"></p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"四、Feign是什么？\"><a href=\"#四、Feign是什么？\" class=\"headerlink\" title=\"四、Feign是什么？\"></a>四、Feign是什么？</h3><p>Feign 是一个声明式 Web 服务客户端。它使编写 Web 服务客户端变得更加容易。只需要创建一个接口并添加注解就可以进行微服务的调用。</p>\n<h3 id=\"五、创建feign-server\"><a href=\"#五、创建feign-server\" class=\"headerlink\" title=\"五、创建feign-server\"></a>五、创建feign-server</h3><ol>\n<li><p>目录结构</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"code\"><pre><span class=\"line\">feign-server</span><br><span class=\"line\">├── src</span><br><span class=\"line\">│   ├── main</span><br><span class=\"line\">│   │   ├── java</span><br><span class=\"line\">│   │   │   └── top</span><br><span class=\"line\">│   │   │       └── yxf</span><br><span class=\"line\">│   │   │           └── feign</span><br><span class=\"line\">│   │   │               ├── SpringbootFeignServerApplication.java</span><br><span class=\"line\">│   │   │               ├── controller</span><br><span class=\"line\">│   │   │               │   └── OrderController.java</span><br><span class=\"line\">│   │   │               ├── pojo</span><br><span class=\"line\">│   │   │               │   └── Order.java</span><br><span class=\"line\">│   │   │               ├── repository</span><br><span class=\"line\">│   │   │               │   └── OrderRepository.java</span><br><span class=\"line\">│   │   │               └── service</span><br><span class=\"line\">│   │   │                   ├── OrderService.java</span><br><span class=\"line\">│   │   │                   └── impl</span><br><span class=\"line\">│   │   │                       └── OrderServiceImpl.java</span><br><span class=\"line\">│   │   └── resources</span><br><span class=\"line\">│   │       ├── application.yml</span><br><span class=\"line\">│   │       ├── static</span><br><span class=\"line\">│   │       └── templates</span><br><span class=\"line\">│   └── test</span><br><span class=\"line\">│       └── java</span><br><span class=\"line\">│           └── top</span><br><span class=\"line\">│               └── yxf</span><br><span class=\"line\">│                   └── feign</span><br><span class=\"line\">│                       └── SpringbootFeignApplicationTests.java</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- openfeign --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- nacos --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2021.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2021.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>fastjson<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.83<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.29<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- jpa --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.12.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">9090</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">feign-server</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">nacos:</span></span><br><span class=\"line\">      <span class=\"attr\">discovery:</span></span><br><span class=\"line\">        <span class=\"attr\">server-addr:</span> <span class=\"string\">ip:8848</span></span><br><span class=\"line\">      <span class=\"attr\">config:</span></span><br><span class=\"line\">        <span class=\"attr\">server-addr:</span> <span class=\"string\">ip:8848</span></span><br><span class=\"line\">    <span class=\"attr\">compatibility-verifier:</span></span><br><span class=\"line\">      <span class=\"attr\">enabled:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">jpa:</span></span><br><span class=\"line\">    <span class=\"attr\">hibernate:</span></span><br><span class=\"line\">      <span class=\"attr\">ddl-auto:</span> <span class=\"string\">update</span> <span class=\"comment\"># 更新表相关信息在创建表</span></span><br><span class=\"line\">    <span class=\"attr\">show-sql:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 显示sql</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/springbootjpa?serverTimezone=Asia/Shanghai</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">rootroot</span></span><br><span class=\"line\">    <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动类添加注解<code>@EnableFeignClients</code>,<code>@EnableDiscoveryClient</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@EnableFeignClients</span></span><br><span class=\"line\"><span class=\"meta\">@EnableDiscoveryClient</span></span><br><span class=\"line\"><span class=\"meta\">@EnableJpaRepositories</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringbootFeignServerApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(SpringbootFeignServerApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>订单实体</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@Entity</span></span><br><span class=\"line\"><span class=\"meta\">@Table(name = &quot;t_order&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Order</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 订单 id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Id</span></span><br><span class=\"line\">    <span class=\"meta\">@GeneratedValue(strategy = GenerationType.AUTO)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long orderId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户 id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;user_id&quot;, nullable = false, length = 20)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long userId;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;create_date&quot;, insertable = true)</span></span><br><span class=\"line\">    <span class=\"meta\">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date createDate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 订单名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;order_title&quot;, nullable = false, length = 20)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String orderTitle;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 订单价格</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;price&quot;, nullable = false, length = 20)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span> price;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 修改时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;update_date&quot;, updatable = true)</span></span><br><span class=\"line\">    <span class=\"meta\">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date updateDate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 订单详情</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;order_details&quot;, nullable = true, length = 100)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String orderDetails;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>订单service接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">OrderService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** 获取订单信息</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String <span class=\"title function_\">getInfos</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    String <span class=\"title function_\">findOrderByName</span><span class=\"params\">(String orderName)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    String <span class=\"title function_\">getOrderByPriceAndOrderTitle</span><span class=\"params\">(<span class=\"type\">double</span> price, String orderTitle)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>订单service接口实现类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">OrderService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> OrderRepository orderRepository;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getInfos</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Order</span> <span class=\"variable\">order</span> <span class=\"operator\">=</span> orderRepository.getOne(<span class=\"number\">1L</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JSON.toJSONString(order);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">findOrderByName</span><span class=\"params\">(String orderName)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JSON.toJSONString(orderRepository.findOrderByOrderTitleEquals(orderName));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getOrderByPriceAndOrderTitle</span><span class=\"params\">(<span class=\"type\">double</span> price, String orderTitle)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JSON.toJSONString(orderRepository.getOrderByPriceAndOrderTitle(price, orderTitle));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>订单数据仓储层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Repository</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">OrderRepository</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JpaRepository</span>&lt;Order, Long&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Order <span class=\"title function_\">findOrderByOrderTitleEquals</span><span class=\"params\">(String orderTitle)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Query(&quot;select o from Order o where o.price = :price and o.orderTitle = :orderTitle&quot;)</span></span><br><span class=\"line\">    Order <span class=\"title function_\">getOrderByPriceAndOrderTitle</span><span class=\"params\">(<span class=\"type\">double</span> price, String orderTitle)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>订单控制层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api/order&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> OrderService orderService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/info&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> orderService.getInfos();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/findOrderByName/&#123;orderName&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">findOrderByName</span><span class=\"params\">(<span class=\"meta\">@PathVariable(&quot;orderName&quot;)</span> String orderName)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> orderService.findOrderByName(orderName);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/getOrderByPriceAndOrderTitle&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getOrderByPriceAndOrderTitle</span><span class=\"params\">(<span class=\"meta\">@RequestParam(&quot;orderTitle&quot;)</span> String orderTitle,</span></span><br><span class=\"line\"><span class=\"params\">                                               <span class=\"meta\">@RequestParam(&quot;price&quot;)</span> <span class=\"type\">double</span> price)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> orderService.getOrderByPriceAndOrderTitle(price, orderTitle);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动服务</p>\n<p><img src=\"/../images/image-20220731102229034.png\" alt=\"image-20220731102229034\"></p>\n</li>\n</ol>\n<h3 id=\"六、整合feign-server遇到问题\"><a href=\"#六、整合feign-server遇到问题\" class=\"headerlink\" title=\"六、整合feign-server遇到问题\"></a>六、整合feign-server遇到问题</h3><ol>\n<li><p>springboot版本和nacos版本依赖不对应，我最开始用的springboot版本是2.7.2，出现如下问题，解决方法，将springboot依赖版本降至未2.4.2,具体版本问题可点击<a href=\"%5Bhttps://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E%5D(https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E)\">官网</a>查看</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/bin/java -agentlib:jdwp=transport=dt_socket,address=<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">53620</span>,suspend=y,server=n -XX:TieredStopAtLevel=<span class=\"number\">1</span> -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=<span class=\"literal\">true</span> -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=<span class=\"literal\">true</span> -javaagent:/Users/wxs/Library/Caches/JetBrains/IntelliJIdea2021<span class=\"number\">.3</span>/captureAgent/debugger-agent.jar -Dfile.encoding=UTF-<span class=\"number\">8</span> -classpath /Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_333</span>.jdk/Contents/Home/jre/lib/rt.jar:/Users/wxs/work/project/project/myCode/springboot-feign/target/classes:/Users/wxs/work/software/repository/org/springframework/boot/spring-boot-starter-web/<span class=\"number\">2.7</span><span class=\"number\">.2</span>/spring-boot-starter-web-<span class=\"number\">2.7</span><span class=\"number\">.2</span>.jar:/Users/wxs/work/software/repository/org/springframework/boot/spring-boot-starter/<span class=\"number\">2.7</span><span class=\"number\">.2</span>/spring-boot-starter-<span class=\"number\">2.7</span><span class=\"number\">.2</span>.jar:/Users/wxs/work/software/repository/org/springframework/boot/spring-boot/<span class=\"number\">2.7</span><span class=\"number\">.2</span>/spring-boot-<span class=\"number\">2.7</span><span class=\"number\">.2</span>.jar:/Users/wxs/work/software/repository/org/springframework/boot/spring-boot-autoconfigure/<span class=\"number\">2.7</span><span class=\"number\">.2</span>/spring-boot-autoconfigure-<span class=\"number\">2.7</span><span class=\"number\">.2</span>.jar:/Users/wxs/work/software/repository/org/springframework/boot/spring-boot-starter-logging/<span class=\"number\">2.7</span><span class=\"number\">.2</span>/spring-boot-starter-logging-<span class=\"number\">2.7</span><span class=\"number\">.2</span>.jar:/Users/wxs/work/software/repository/ch/qos/logback/logback-classic/<span class=\"number\">1.2</span><span class=\"number\">.11</span>/logback-classic-<span class=\"number\">1.2</span><span class=\"number\">.11</span>.jar:/Users/wxs/work/software/repository/ch/qos/logback/logback-core/<span class=\"number\">1.2</span><span class=\"number\">.11</span>/logback-core-<span class=\"number\">1.2</span><span class=\"number\">.11</span>.jar:/Users/wxs/work/software/repository/org/apache/logging/log4j/log4j-to-slf4j/<span class=\"number\">2.17</span><span class=\"number\">.2</span>/log4j-to-slf4j-<span class=\"number\">2.17</span><span class=\"number\">.2</span>.jar:/Users/wxs/work/software/repository/org/apache/logging/log4j/log4j-api/<span class=\"number\">2.17</span><span class=\"number\">.2</span>/log4j-api-<span class=\"number\">2.17</span><span class=\"number\">.2</span>.jar:/Users/wxs/work/software/repository/org/slf4j/jul-to-slf4j/<span class=\"number\">1.7</span><span class=\"number\">.36</span>/jul-to-slf4j-<span class=\"number\">1.7</span><span class=\"number\">.36</span>.jar:/Users/wxs/work/software/repository/jakarta/annotation/jakarta.annotation-api/<span class=\"number\">1.3</span><span class=\"number\">.5</span>/jakarta.annotation-api-<span class=\"number\">1.3</span><span class=\"number\">.5</span>.jar:/Users/wxs/work/software/repository/org/yaml/snakeyaml/<span class=\"number\">1.30</span>/snakeyaml-<span class=\"number\">1.30</span>.jar:/Users/wxs/work/software/repository/org/springframework/boot/spring-boot-starter-json/<span class=\"number\">2.7</span><span class=\"number\">.2</span>/spring-boot-starter-json-<span class=\"number\">2.7</span><span class=\"number\">.2</span>.jar:/Users/wxs/work/software/repository/com/fasterxml/jackson/core/jackson-databind/<span class=\"number\">2.13</span><span class=\"number\">.3</span>/jackson-databind-<span class=\"number\">2.13</span><span class=\"number\">.3</span>.jar:/Users/wxs/work/software/repository/com/fasterxml/jackson/core/jackson-annotations/<span class=\"number\">2.13</span><span class=\"number\">.3</span>/jackson-annotations-<span class=\"number\">2.13</span><span class=\"number\">.3</span>.jar:/Users/wxs/work/software/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/<span class=\"number\">2.13</span><span class=\"number\">.3</span>/jackson-datatype-jdk8-<span class=\"number\">2.13</span><span class=\"number\">.3</span>.jar:/Users/wxs/work/software/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/<span class=\"number\">2.13</span><span class=\"number\">.3</span>/jackson-datatype-jsr310-<span class=\"number\">2.13</span><span class=\"number\">.3</span>.jar:/Users/wxs/work/software/repository/com/fasterxml/jackson/<span class=\"keyword\">module</span>/jackson-<span class=\"keyword\">module</span>-parameter-names/<span class=\"number\">2.13</span><span class=\"number\">.3</span>/jackson-<span class=\"keyword\">module</span>-parameter-names-<span class=\"number\">2.13</span><span class=\"number\">.3</span>.jar:/Users/wxs/work/software/repository/org/springframework/boot/spring-boot-starter-tomcat/<span class=\"number\">2.7</span><span class=\"number\">.2</span>/spring-boot-starter-tomcat-<span class=\"number\">2.7</span><span class=\"number\">.2</span>.jar:/Users/wxs/work/software/repository/org/apache/tomcat/embed/tomcat-embed-core/<span class=\"number\">9.0</span><span class=\"number\">.65</span>/tomcat-embed-core-<span class=\"number\">9.0</span><span class=\"number\">.65</span>.jar:/Users/wxs/work/software/repository/org/apache/tomcat/embed/tomcat-embed-el/<span class=\"number\">9.0</span><span class=\"number\">.65</span>/tomcat-embed-el-<span class=\"number\">9.0</span><span class=\"number\">.65</span>.jar:/Users/wxs/work/software/repository/org/apache/tomcat/embed/tomcat-embed-websocket/<span class=\"number\">9.0</span><span class=\"number\">.65</span>/tomcat-embed-websocket-<span class=\"number\">9.0</span><span class=\"number\">.65</span>.jar:/Users/wxs/work/software/repository/org/springframework/spring-web/<span class=\"number\">5.3</span><span class=\"number\">.22</span>/spring-web-<span class=\"number\">5.3</span><span class=\"number\">.22</span>.jar:/Users/wxs/work/software/repository/org/springframework/spring-beans/<span class=\"number\">5.3</span><span class=\"number\">.22</span>/spring-beans-<span class=\"number\">5.3</span><span class=\"number\">.22</span>.jar:/Users/wxs/work/software/repository/org/springframework/spring-webmvc/<span class=\"number\">5.3</span><span class=\"number\">.22</span>/spring-webmvc-<span class=\"number\">5.3</span><span class=\"number\">.22</span>.jar:/Users/wxs/work/software/repository/org/springframework/spring-aop/<span class=\"number\">5.3</span><span class=\"number\">.22</span>/spring-aop-<span class=\"number\">5.3</span><span class=\"number\">.22</span>.jar:/Users/wxs/work/software/repository/org/springframework/spring-context/<span class=\"number\">5.3</span><span class=\"number\">.22</span>/spring-context-<span class=\"number\">5.3</span><span class=\"number\">.22</span>.jar:/Users/wxs/work/software/repository/org/springframework/spring-expression/<span class=\"number\">5.3</span><span class=\"number\">.22</span>/spring-expression-<span class=\"number\">5.3</span><span class=\"number\">.22</span>.jar:/Users/wxs/work/software/repository/org/slf4j/slf4j-api/<span class=\"number\">1.7</span><span class=\"number\">.36</span>/slf4j-api-<span class=\"number\">1.7</span><span class=\"number\">.36</span>.jar:/Users/wxs/work/software/repository/org/springframework/spring-core/<span class=\"number\">5.3</span><span class=\"number\">.22</span>/spring-core-<span class=\"number\">5.3</span><span class=\"number\">.22</span>.jar:/Users/wxs/work/software/repository/org/springframework/spring-jcl/<span class=\"number\">5.3</span><span class=\"number\">.22</span>/spring-jcl-<span class=\"number\">5.3</span><span class=\"number\">.22</span>.jar:/Users/wxs/work/software/repository/org/springframework/cloud/spring-cloud-starter-openfeign/<span class=\"number\">3.1</span><span class=\"number\">.3</span>/spring-cloud-starter-openfeign-<span class=\"number\">3.1</span><span class=\"number\">.3</span>.jar:/Users/wxs/work/software/repository/org/springframework/cloud/spring-cloud-starter/<span class=\"number\">3.1</span><span class=\"number\">.3</span>/spring-cloud-starter-<span class=\"number\">3.1</span><span class=\"number\">.3</span>.jar:/Users/wxs/work/software/repository/org/springframework/security/spring-security-rsa/<span class=\"number\">1.0</span><span class=\"number\">.10</span>.RELEASE/spring-security-rsa-<span class=\"number\">1.0</span><span class=\"number\">.10</span>.RELEASE.jar:/Users/wxs/work/software/repository/org/bouncycastle/bcpkix-jdk15on/<span class=\"number\">1.68</span>/bcpkix-jdk15on-<span class=\"number\">1.68</span>.jar:/Users/wxs/work/software/repository/org/bouncycastle/bcprov-jdk15on/<span class=\"number\">1.68</span>/bcprov-jdk15on-<span class=\"number\">1.68</span>.jar:/Users/wxs/work/software/repository/org/springframework/cloud/spring-cloud-openfeign-core/<span class=\"number\">3.1</span><span class=\"number\">.3</span>/spring-cloud-openfeign-core-<span class=\"number\">3.1</span><span class=\"number\">.3</span>.jar:/Users/wxs/work/software/repository/org/springframework/boot/spring-boot-starter-aop/<span class=\"number\">2.7</span><span class=\"number\">.2</span>/spring-boot-starter-aop-<span class=\"number\">2.7</span><span class=\"number\">.2</span>.jar:/Users/wxs/work/software/repository/org/aspectj/aspectjweaver/<span class=\"number\">1.9</span><span class=\"number\">.7</span>/aspectjweaver-<span class=\"number\">1.9</span><span class=\"number\">.7</span>.jar:/Users/wxs/work/software/repository/io/github/openfeign/form/feign-form-spring/<span class=\"number\">3.8</span><span class=\"number\">.0</span>/feign-form-spring-<span class=\"number\">3.8</span><span class=\"number\">.0</span>.jar:/Users/wxs/work/software/repository/io/github/openfeign/form/feign-form/<span class=\"number\">3.8</span><span class=\"number\">.0</span>/feign-form-<span class=\"number\">3.8</span><span class=\"number\">.0</span>.jar:/Users/wxs/work/software/repository/commons-fileupload/commons-fileupload/<span class=\"number\">1.4</span>/commons-fileupload-<span class=\"number\">1.4</span>.jar:/Users/wxs/work/software/repository/org/springframework/cloud/spring-cloud-commons/<span class=\"number\">3.1</span><span class=\"number\">.3</span>/spring-cloud-commons-<span class=\"number\">3.1</span><span class=\"number\">.3</span>.jar:/Users/wxs/work/software/repository/org/springframework/security/spring-security-crypto/<span class=\"number\">5.7</span><span class=\"number\">.2</span>/spring-security-crypto-<span class=\"number\">5.7</span><span class=\"number\">.2</span>.jar:/Users/wxs/work/software/repository/io/github/openfeign/feign-core/<span class=\"number\">11.8</span>/feign-core-<span class=\"number\">11.8</span>.jar:/Users/wxs/work/software/repository/io/github/openfeign/feign-slf4j/<span class=\"number\">11.8</span>/feign-slf4j-<span class=\"number\">11.8</span>.jar:/Users/wxs/work/software/repository/com/alibaba/cloud/spring-cloud-starter-alibaba-nacos-discovery/<span class=\"number\">2021.1</span>/spring-cloud-starter-alibaba-nacos-discovery-<span class=\"number\">2021.1</span>.jar:/Users/wxs/work/software/repository/com/alibaba/cloud/spring-cloud-alibaba-commons/<span class=\"number\">2021.1</span>/spring-cloud-alibaba-commons-<span class=\"number\">2021.1</span>.jar:/Users/wxs/work/software/repository/com/alibaba/nacos/nacos-client/<span class=\"number\">1.4</span><span class=\"number\">.1</span>/nacos-client-<span class=\"number\">1.4</span><span class=\"number\">.1</span>.jar:/Users/wxs/work/software/repository/com/alibaba/nacos/nacos-common/<span class=\"number\">1.4</span><span class=\"number\">.1</span>/nacos-common-<span class=\"number\">1.4</span><span class=\"number\">.1</span>.jar:/Users/wxs/work/software/repository/commons-io/commons-io/<span class=\"number\">2.2</span>/commons-io-<span class=\"number\">2.2</span>.jar:/Users/wxs/work/software/repository/org/apache/httpcomponents/httpasyncclient/<span class=\"number\">4.1</span><span class=\"number\">.5</span>/httpasyncclient-<span class=\"number\">4.1</span><span class=\"number\">.5</span>.jar:/Users/wxs/work/software/repository/org/apache/httpcomponents/httpcore/<span class=\"number\">4.4</span><span class=\"number\">.15</span>/httpcore-<span class=\"number\">4.4</span><span class=\"number\">.15</span>.jar:/Users/wxs/work/software/repository/org/apache/httpcomponents/httpcore-nio/<span class=\"number\">4.4</span><span class=\"number\">.15</span>/httpcore-nio-<span class=\"number\">4.4</span><span class=\"number\">.15</span>.jar:/Users/wxs/work/software/repository/org/apache/httpcomponents/httpclient/<span class=\"number\">4.5</span><span class=\"number\">.13</span>/httpclient-<span class=\"number\">4.5</span><span class=\"number\">.13</span>.jar:/Users/wxs/work/software/repository/com/alibaba/nacos/nacos-api/<span class=\"number\">1.4</span><span class=\"number\">.1</span>/nacos-api-<span class=\"number\">1.4</span><span class=\"number\">.1</span>.jar:/Users/wxs/work/software/repository/com/google/guava/guava/<span class=\"number\">24.1</span><span class=\"number\">.1</span>-jre/guava-<span class=\"number\">24.1</span><span class=\"number\">.1</span>-jre.jar:/Users/wxs/work/software/repository/com/google/code/findbugs/jsr305/<span class=\"number\">1.3</span><span class=\"number\">.9</span>/jsr305-<span class=\"number\">1.3</span><span class=\"number\">.9</span>.jar:/Users/wxs/work/software/repository/org/checkerframework/checker-compat-qual/<span class=\"number\">2.0</span><span class=\"number\">.0</span>/checker-compat-qual-<span class=\"number\">2.0</span><span class=\"number\">.0</span>.jar:/Users/wxs/work/software/repository/com/google/errorprone/error_prone_annotations/<span class=\"number\">2.1</span><span class=\"number\">.3</span>/error_prone_annotations-<span class=\"number\">2.1</span><span class=\"number\">.3</span>.jar:/Users/wxs/work/software/repository/com/google/j2objc/j2objc-annotations/<span class=\"number\">1.1</span>/j2objc-annotations-<span class=\"number\">1.1</span>.jar:/Users/wxs/work/software/repository/org/codehaus/mojo/animal-sniffer-annotations/<span class=\"number\">1.14</span>/animal-sniffer-annotations-<span class=\"number\">1.14</span>.jar:/Users/wxs/work/software/repository/commons-codec/commons-codec/<span class=\"number\">1.15</span>/commons-codec-<span class=\"number\">1.15</span>.jar:/Users/wxs/work/software/repository/com/fasterxml/jackson/core/jackson-core/<span class=\"number\">2.13</span><span class=\"number\">.3</span>/jackson-core-<span class=\"number\">2.13</span><span class=\"number\">.3</span>.jar:/Users/wxs/work/software/repository/io/prometheus/simpleclient/<span class=\"number\">0.15</span><span class=\"number\">.0</span>/simpleclient-<span class=\"number\">0.15</span><span class=\"number\">.0</span>.jar:/Users/wxs/work/software/repository/io/prometheus/simpleclient_tracer_otel/<span class=\"number\">0.15</span><span class=\"number\">.0</span>/simpleclient_tracer_otel-<span class=\"number\">0.15</span><span class=\"number\">.0</span>.jar:/Users/wxs/work/software/repository/io/prometheus/simpleclient_tracer_common/<span class=\"number\">0.15</span><span class=\"number\">.0</span>/simpleclient_tracer_common-<span class=\"number\">0.15</span><span class=\"number\">.0</span>.jar:/Users/wxs/work/software/repository/io/prometheus/simpleclient_tracer_otel_agent/<span class=\"number\">0.15</span><span class=\"number\">.0</span>/simpleclient_tracer_otel_agent-<span class=\"number\">0.15</span><span class=\"number\">.0</span>.jar:/Users/wxs/work/software/repository/com/alibaba/spring/spring-context-support/<span class=\"number\">1.0</span><span class=\"number\">.10</span>/spring-context-support-<span class=\"number\">1.0</span><span class=\"number\">.10</span>.jar:/Users/wxs/work/software/repository/org/springframework/cloud/spring-cloud-context/<span class=\"number\">3.0</span><span class=\"number\">.1</span>/spring-cloud-context-<span class=\"number\">3.0</span><span class=\"number\">.1</span>.jar:/Users/wxs/work/software/repository/org/projectlombok/lombok/<span class=\"number\">1.18</span><span class=\"number\">.24</span>/lombok-<span class=\"number\">1.18</span><span class=\"number\">.24</span>.jar:/Users/wxs/work/software/repository/com/alibaba/fastjson/<span class=\"number\">1.2</span><span class=\"number\">.83</span>/fastjson-<span class=\"number\">1.2</span><span class=\"number\">.83</span>.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar top.yxf.feign.SpringbootFeignApplication</span><br><span class=\"line\">Connected to the target VM, address: <span class=\"string\">&#x27;127.0.0.1:53620&#x27;</span>, transport: <span class=\"string\">&#x27;socket&#x27;</span></span><br><span class=\"line\"><span class=\"number\">12</span>:<span class=\"number\">04</span>:<span class=\"number\">00.400</span> [main] ERROR org.springframework.boot.SpringApplication - Application run failed</span><br><span class=\"line\">java.lang.NoClassDefFoundError: org/springframework/boot/Bootstrapper</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass1(Native Method)</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass(ClassLoader.java:<span class=\"number\">756</span>)</span><br><span class=\"line\">\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:<span class=\"number\">142</span>)</span><br><span class=\"line\">\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:<span class=\"number\">473</span>)</span><br><span class=\"line\">\tat java.net.URLClassLoader.access$<span class=\"number\">100</span>(URLClassLoader.java:<span class=\"number\">74</span>)</span><br><span class=\"line\">\tat java.net.URLClassLoader$<span class=\"number\">1.</span>run(URLClassLoader.java:<span class=\"number\">369</span>)</span><br><span class=\"line\">\tat java.net.URLClassLoader$<span class=\"number\">1.</span>run(URLClassLoader.java:<span class=\"number\">363</span>)</span><br><span class=\"line\">\tat java.security.AccessController.doPrivileged(Native Method)</span><br><span class=\"line\">\tat java.net.URLClassLoader.findClass(URLClassLoader.java:<span class=\"number\">362</span>)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:<span class=\"number\">418</span>)</span><br><span class=\"line\">\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:<span class=\"number\">355</span>)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:<span class=\"number\">351</span>)</span><br><span class=\"line\">\tat org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor.getTextEncryptor(DecryptEnvironmentPostProcessor.java:<span class=\"number\">82</span>)</span><br><span class=\"line\">\tat org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor.postProcessEnvironment(DecryptEnvironmentPostProcessor.java:<span class=\"number\">68</span>)</span><br><span class=\"line\">\tat org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEnvironmentPreparedEvent(EnvironmentPostProcessorApplicationListener.java:<span class=\"number\">102</span>)</span><br><span class=\"line\">\tat org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEvent(EnvironmentPostProcessorApplicationListener.java:<span class=\"number\">87</span>)</span><br><span class=\"line\">\tat org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:<span class=\"number\">176</span>)</span><br><span class=\"line\">\tat org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:<span class=\"number\">169</span>)</span><br><span class=\"line\">\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:<span class=\"number\">143</span>)</span><br><span class=\"line\">\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:<span class=\"number\">131</span>)</span><br><span class=\"line\">\tat org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:<span class=\"number\">85</span>)</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$<span class=\"number\">2</span>(SpringApplicationRunListeners.java:<span class=\"number\">66</span>)</span><br><span class=\"line\">\tat java.util.ArrayList.forEach(ArrayList.java:<span class=\"number\">1259</span>)</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:<span class=\"number\">120</span>)</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:<span class=\"number\">114</span>)</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:<span class=\"number\">65</span>)</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:<span class=\"number\">344</span>)</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:<span class=\"number\">302</span>)</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:<span class=\"number\">1306</span>)</span><br><span class=\"line\">\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:<span class=\"number\">1295</span>)</span><br><span class=\"line\">\tat top.yxf.feign.SpringbootFeignApplication.main(SpringbootFeignApplication.java:<span class=\"number\">16</span>)</span><br><span class=\"line\">Caused by: java.lang.ClassNotFoundException: org.springframework.boot.Bootstrapper</span><br><span class=\"line\">\tat java.net.URLClassLoader.findClass(URLClassLoader.java:<span class=\"number\">387</span>)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:<span class=\"number\">418</span>)</span><br><span class=\"line\">\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:<span class=\"number\">355</span>)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:<span class=\"number\">351</span>)</span><br><span class=\"line\">\t... <span class=\"number\">31</span> common frames omitted</span><br><span class=\"line\">Disconnected from the target VM, address: <span class=\"string\">&#x27;127.0.0.1:53620&#x27;</span>, transport: <span class=\"string\">&#x27;socket&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>今天在使用openfeign的使用启动出现了No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?</p>\n<ol>\n<li>解决方案：网上查找了下原因：这是因为由于SpringCloud Feign在Hoxton.M2 RELEASED版本之后不再使用<a href=\"https://so.csdn.net/so/search?q=Ribbon&spm=1001.2101.3001.7020\">Ribbon</a>而是使用spring-cloud-loadbalancer，所以不引入spring-cloud-loadbalancer会报错。需要在nacos注册发现依赖中把Ribbon 进行客户端负载均衡去掉就可以了</li>\n</ol>\n</li>\n<li><p>整合jpa出现No bean named ‘entityManagerFactory’ available，</p>\n<ol>\n<li><p>解决方案：</p>\n<p>依赖版本不兼容问题，最开始我jpa版本是maven仓库最新版本<code>2.7.2</code>，替换对应版本即可</p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"七、创建feign-client\"><a href=\"#七、创建feign-client\" class=\"headerlink\" title=\"七、创建feign-client\"></a>七、创建feign-client</h3><ol>\n<li><p>项目结构</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"code\"><pre><span class=\"line\">feign-client</span><br><span class=\"line\">├── src</span><br><span class=\"line\">│   ├── main</span><br><span class=\"line\">│   │   ├── java</span><br><span class=\"line\">│   │   │   └── top</span><br><span class=\"line\">│   │   │       └── yxf</span><br><span class=\"line\">│   │   │           └── feign</span><br><span class=\"line\">│   │   │               └── client</span><br><span class=\"line\">│   │   │                   ├── SpringbootFeignClientApplication.java</span><br><span class=\"line\">│   │   │                   ├── config</span><br><span class=\"line\">│   │   │                   │   └── FeignClientConfig.java</span><br><span class=\"line\">│   │   │                   ├── controller</span><br><span class=\"line\">│   │   │                   │   └── OrderController.java</span><br><span class=\"line\">│   │   │                   └── service</span><br><span class=\"line\">│   │   │                       └── OrderFeignClient.java</span><br><span class=\"line\">│   │   └── resources</span><br><span class=\"line\">│   │       ├── application.yml</span><br><span class=\"line\">│   │       ├── static</span><br><span class=\"line\">│   │       └── templates</span><br><span class=\"line\">│   └── test</span><br><span class=\"line\">│       └── java</span><br><span class=\"line\">│           └── top</span><br><span class=\"line\">│               └── yxf</span><br><span class=\"line\">│                   └── feign</span><br><span class=\"line\">│                       └── client</span><br><span class=\"line\">│                           └── SpringbootFeignClientApplicationTests.java</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Pom添加依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- openfeign --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- nacos --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2021.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2021.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>fastjson<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.83<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- loadbalancer --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-loadbalancer<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>yml添加配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">9091</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">feign-client</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">nacos:</span></span><br><span class=\"line\">      <span class=\"attr\">discovery:</span></span><br><span class=\"line\">        <span class=\"attr\">server-addr:</span> <span class=\"number\">192.168</span><span class=\"number\">.8</span><span class=\"number\">.160</span><span class=\"string\">:8848</span></span><br><span class=\"line\">      <span class=\"attr\">config:</span></span><br><span class=\"line\">        <span class=\"attr\">server-addr:</span> <span class=\"number\">192.168</span><span class=\"number\">.8</span><span class=\"number\">.160</span><span class=\"string\">:8848</span></span><br><span class=\"line\">    <span class=\"attr\">compatibility-verifier:</span></span><br><span class=\"line\">      <span class=\"attr\">enabled:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动类添加注解<code>@EnableFeignClients</code>,<code>@EnableDiscoveryClient</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@EnableFeignClients</span></span><br><span class=\"line\"><span class=\"meta\">@EnableDiscoveryClient</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringbootFeignClientApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(SpringbootFeignClientApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>FeignClientService编写,添加注解<code>@FeignClient</code>,具体属性下面会详解</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@FeignClient(</span></span><br><span class=\"line\"><span class=\"meta\">        name = &quot;feign-server&quot;,</span></span><br><span class=\"line\"><span class=\"meta\">        fallback = OrderFeignClient.OrderFeignClientFallback.class</span></span><br><span class=\"line\"><span class=\"meta\">)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">OrderFeignClient</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/** 获取订单信息</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = &quot;/api/order/info&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">    String <span class=\"title function_\">getInfos</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">OrderFeignClientFallback</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">OrderFeignClient</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> String <span class=\"title function_\">getInfos</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;超时&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>控制层编写</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api/order&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> OrderFeignClient orderFeignClient;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/info&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> orderFeignClient.getInfos();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动服务</p>\n<p><img src=\"/../images/image-20220731105856754.png\" alt=\"image-20220731105856754\"></p>\n</li>\n</ol>\n<h3 id=\"八、测试\"><a href=\"#八、测试\" class=\"headerlink\" title=\"八、测试\"></a>八、测试</h3><p><img src=\"/../images/image-20220731110030632.png\" alt=\"image-20220731110030632\"></p>\n<h3 id=\"九、Tips\"><a href=\"#九、Tips\" class=\"headerlink\" title=\"九、Tips\"></a>九、Tips</h3><h6 id=\"1-FeignClient注解属性详解\"><a href=\"#1-FeignClient注解属性详解\" class=\"headerlink\" title=\"1.FeignClient注解属性详解\"></a>1.FeignClient注解属性详解</h6><p>FeignClient注解被@Target(ElementType.TYPE)修饰，表示FeignClient注解的作用目标在<code>接口上</code></p>\n<ul>\n<li>name&#x2F;value：指定FeignClient的名称，如果项目使用了Ribbon，name属性会作为微服务的名称，用于服务发现</li>\n<li>contextId：指定beanID</li>\n<li>url: url一般用于调试，可以手动指定@FeignClient调用的地址</li>\n<li>decode404:当发生http 404错误时，如果该字段位true，会调用decoder进行解码，否则抛出FeignException</li>\n<li>configuration: Feign配置类，可以自定义Feign的Encoder、Decoder、LogLevel、Contract</li>\n<li>fallback: 定义容错的处理类，当调用远程接口失败或超时时，会调用对应接口的容错逻辑，fallback指定的类必须实现@FeignClient标记的接口</li>\n<li>fallbackFactory: 工厂类，用于生成fallback类示例，通过这个属性我们可以实现每个接口通用的容错逻辑，减少重复的代码</li>\n<li>path: 定义当前FeignClient的统一前缀</li>\n</ul>\n<h6 id=\"2-FeignClient和-RequestMapping\"><a href=\"#2-FeignClient和-RequestMapping\" class=\"headerlink\" title=\"2.FeignClient和@RequestMapping\"></a>2.FeignClient和@RequestMapping</h6><p>当前工程中有和Feign Client中一样的Endpoint时，Feign Client的类上不能用@RequestMapping注解否则，当前工程该endpoint http请求且使用accpet时会报404</p>\n<ol>\n<li><p>如果 @RequestMapping注解被用在FeignClient类上，当像如下代码请求&#x2F;api&#x2F;order&#x2F;info时，注意有Accept header：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Content-Type:application/json</span><br><span class=\"line\">Accept:application/json</span><br><span class=\"line\"> </span><br><span class=\"line\">POST http:<span class=\"comment\">//localhost:9091/api/order/info</span></span><br><span class=\"line\"></span><br><span class=\"line\">返回<span class=\"number\">404</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果不包含Accept header时请求，则是OK：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Content-Type:application/json</span><br><span class=\"line\">POST http:<span class=\"comment\">//localhost:9091/api/order/info</span></span><br></pre></td></tr></table></figure>\n\n<p>或者像下面不在Feign Client上使用@RequestMapping注解,请求也是ok，无论是否包含Accept:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(value = &quot;/api/order/info&quot;, method = RequestMethod.GET)</span></span><br><span class=\"line\">String <span class=\"title function_\">getInfos</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h6 id=\"3-Feign请求超时问题\"><a href=\"#3-Feign请求超时问题\" class=\"headerlink\" title=\"3.Feign请求超时问题\"></a>3.Feign请求超时问题</h6><p>Hystrix默认的超时时间是1秒，如果超过这个时间尚未响应，将会进入fallback代码。而首次请求往往会比较慢（因为Spring的懒加载机制，要实例化一些类），这个响应时间可能就大于1秒了 解决方案有三种，以feign为例。 </p>\n<ol>\n<li><p>方法一：hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 5000 该配置是让Hystrix的超时时间改为5秒 </p>\n</li>\n<li><p>方法二：hystrix.command.default.execution.timeout.enabled: false 该配置，用于禁用Hystrix的超时时间 </p>\n</li>\n<li><p>方法三：</p>\n<p>feign.hystrix.enabled: false 该配置，用于索性禁用feign的hystrix。该做法除非一些特殊场景，不推荐使用。</p>\n</li>\n</ol>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["java"],"tags":["springboot,nacos,openFeign,jpa"]},{"title":"有关Hexo主题next分页问题解决方案","url":"/2022/07/31/%E6%9C%89%E5%85%B3Hexo%E4%B8%BB%E4%BD%93next%E5%88%86%E9%A1%B5%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","content":"<h1 id=\"有关Hexo主体next分页问题解决方案\"><a href=\"#有关Hexo主体next分页问题解决方案\" class=\"headerlink\" title=\"有关Hexo主体next分页问题解决方案\"></a>有关Hexo主体next分页问题解决方案</h1><h3 id=\"一、分页问题\"><a href=\"#一、分页问题\" class=\"headerlink\" title=\"一、分页问题\"></a>一、分页问题</h3><ol>\n<li><p><code>Hexo</code> 分页显示有问题，如下：</p>\n<p><img src=\"/../images/image-20220731113538933.png\" alt=\"image-20220731113538933\"></p>\n</li>\n<li><p>相关 <a href=\"https://github.com/hexojs/hexo/issues/3794\">issue 3794</a> 。</p>\n</li>\n<li><p>查看最新模板：<a href=\"https://github.com/theme-next/hexo-theme-next/blob/master/layout/_partials/pagination.swig\">https://github.com/theme-next/hexo-theme-next/blob/master/layout/_partials/pagination.swig</a></p>\n</li>\n</ol>\n<h3 id=\"二、解决方法\"><a href=\"#二、解决方法\" class=\"headerlink\" title=\"二、解决方法\"></a>二、解决方法</h3><ol>\n<li><p>修改页码模板文件 <code>&lt;Hexo目录&gt;/themes/next/layout/_partials/pagination.swig</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;%- <span class=\"keyword\">if</span> page.<span class=\"property\">prev</span> or page.<span class=\"property\">next</span> %&#125;</span><br><span class=\"line\">  &lt;nav <span class=\"keyword\">class</span>=<span class=\"string\">&quot;pagination&quot;</span>&gt;</span><br><span class=\"line\">    &#123;&#123;</span><br><span class=\"line\">      <span class=\"title function_\">paginator</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">prev_text</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">next_text</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        mid_size : <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"built_in\">escape</span>   : <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;&#125;</span><br><span class=\"line\">  &lt;/nav&gt;</span><br><span class=\"line\">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><a href=\"https://blog.lanweihong.com/posts/13988/\">参考链接</a></p>\n<p><code>你知道的越多，不知道的就越多，每天进步一点点</code></p>\n<p><code>The more you know, the more you don&#39;t know，Make small but daily progress</code></p>\n","categories":["hero"],"tags":["next主题"]}]